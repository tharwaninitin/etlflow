name: EtlFlow CI
on: [push]
jobs:
  core:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ] # removed version 8 temporarily to avoid sbt-updates failing because of the latest version of LogbackVersion
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run Core Tests
        run: sbt ";project core; +test; Test/runMain etlflow.SampleJobApp"
  dbpg:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ] # removed version 8 temporarily to avoid sbt-updates failing because of the latest version of LogbackVersion
      fail-fast: false
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: etlflow
          POSTGRES_USER: etlflow
          POSTGRES_DB: etlflow
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run JDBC Tests
        run: sbt ";project jdbc; +test; +Test/runMain etlflow.SampleJobWithDbLogging"
        env:
          DB_URL: jdbc:postgresql://localhost:5432/etlflow
          DB_USER: etlflow
          DB_PWD: etlflow
          DB_DRIVER: org.postgresql.Driver
  dbmysql:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_USER: etlflow
          MYSQL_PASSWORD: etlflow
          MYSQL_DATABASE: etlflow
          MYSQL_ROOT_PASSWORD: etlflow
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run JDBC Tests
        run: sbt ";project jdbc; test; Test/runMain etlflow.SampleJobWithDbLogging"
        env:
          DB_URL: jdbc:mysql://localhost:3306/etlflow?allowMultiQueries=true
          DB_USER: etlflow
          DB_PWD: etlflow
          DB_DRIVER: com.mysql.cj.jdbc.Driver
  spark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 14 ] # removed version 8 temporarily to avoid sbt-updates failing because of the latest version of LogbackVersion
      fail-fast: false
    services:
      # Label used to access the service container
      postgres:
        image: postgres:11
        env:
          POSTGRES_PASSWORD: etlflow
          POSTGRES_USER: etlflow
          POSTGRES_DB: etlflow
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run Spark Tests
        run: sbt ";project spark; +test"
  http:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run Http Tests
        run: sbt ";project http; +test"
  redis:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ] # removed version 8 temporarily to avoid sbt-updates failing because of the latest version of LogbackVersion
      fail-fast: false
    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 6379:6379
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run Redis Tests
        run: sbt ";project redis; +test"
  aws:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ] # removed version 8 temporarily to avoid sbt-updates failing because of the latest version of LogbackVersion
      fail-fast: false
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup minio
        run: |
          docker run -d -p 9000:9000 -p 9001:9001 --name minio \
                     -e "MINIO_ROOT_USER=etlflow" \
                     -e "MINIO_ROOT_PASSWORD=etlflowpass" \
                     -v /tmp/data:/data \
                     -v /tmp/config:/root/.minio \
                     minio/minio server /data --console-address ":9001"
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Run AWS Tests
        run: sbt ";project aws; +test"
  k8s:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11, 17 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Compile K8S Test
        run: sbt ";project k8s; +Test/compile"
  email:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8, 11, 17 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Compile Email Module
        run: sbt ";project email; +Test/compile"
  gcp:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8, 11, 17 ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'adopt'
          cache: 'sbt'
      - name: Compile Gcp Module
        run: sbt ";project gcp; +Test/compile"