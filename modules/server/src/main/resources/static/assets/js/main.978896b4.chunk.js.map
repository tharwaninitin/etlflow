{"version":3,"sources":["components/CurrentTime.js","components/Error.js","cards/MemoryGraph.js","components/Refresh.js","components/Loader.js","cards/Metrics.js","cards/BarGraph.js","pages/Stats.js","components/Notification.js","cards/Credential.js","pages/Credential.js","cards/JobList.js","pages/JobList.js","cards/JobRuns.js","pages/JobRuns.js","cards/RunningJobs.js","pages/RunningJobs.js","cards/JobRunDetails.js","components/Routes.js","components/Login.js","App.js","index.js","utils/GraphQl.js"],"names":["CurrentTime","props","state","currentime","a","GRAPHQL_URL","this","fetchCall","response","json","data","fetchEtlFlowJobs","then","setState","prevState","current_time","className","React","Component","Error","custom_error","error","class","ws_url","URL","window","location","href","protocol","replace","MemoryGraph","used","total","free","max","error_code","ws","WebSocket","localStorage","getItem","options","low","showArea","showPoint","close_ws","close","document","getElementById","innerText","console","log","readyState","CLOSED","onopen","onmessage","evt","message","res","JSON","parse","memory","onclose","used_memory_data","series","free_memory_data","total_memory_data","used_memory_chart","Chartist","Line","free_memory_chart","total_memory_chart","updateMemoryChart","getMemoryData","call","type","push","chart","point","memType","length","shift","update","setTimeout","data-toggle","role","aria-expanded","aria-controls","id","onClick","Refresh","Loader","Metrics","setMetrics","loader","metrics","active_jobs","active_subscribers","etl_jobs","cron_jobs","build_time","BarGraph","setJobLogs","load_bar","callApi","jobLogs","barChart","catch","filter","limit","filterOperation","limitOperation","query","status","logout","removeItem","ok","statusText","params","seriesBarDistance","axisX","offset","axisY","labelInterpolationFnc","value","scaleMinSpace","job_name_labels","job_success","job_failed","map","job_name","success","failed","Bar","labels","filter_button_name","limit_button_name","aria-labelledby","setInitialState","Stats","fetchEtlFlowMetrics","Notification","notification_var","notification","is_error","errors","data-dismiss","aria-label","setNotification","aria-hidden","job_props","CredentialData","credential","jdbc_values","aws_values","jdbc_keys","aws_keys","credential_name","credential_type","insert_credential_type","name","props_updated","stringify","replaceAll","update_credentials","setJobErrorDeails","add_credentials","el","i","placeholder","disabled","onChange","setInsertValues","bind","setValues","event","target","final_props","updateCreds","cred_name","insertCreds","setAddCredInitialState","filter_insert_button_name","setCredentials","data-target","tabindex","createAddCredUI","addCredentials","valid_from","createUpdateCredUI","updateCredentials","Credential","fetchEtlFlowCreds","JobListData","jobs","run_job_props","is_active","values","keys","body","run_job","dt","$","DataTable","column","visible","job_properties","key","html","modal","history","setRunJobKeys","setRunJobValues","removeProps","splice","runEtlJob","setJobDeails","get_etl_jobs","aria-describedby","defaultChecked","e","updateJobActiveState","update_job_state","handleOnClick","schedule","nextSchedule","data-order","schduleRemainingTime","last_run_time","last_run_description","showModal","createUI","addProps","submitRunJob","withRouter","JobList","JobRunsData","job_run_id","jobruns","retry_job_name","filter_start_date","filter_end_date","paginationValue","timerID","setInterval","data_jobruns","default_props","includes","job_id","button","filter_button_job_name","filter_back_button","decPaginationValue","undefined","match","aria-haspopup","setFilterName","list","setJobName","setFilterStartDate","setFilterEndDate","setJobRuns","job_type","start_time","elapsed_time","showJobRunStateModal","properties","retryJobRun","incPaginationValue","JobRuns","clearInterval","RunningJobsData","queueStats","queue","setEtlFlowQueueStats","submitted_from","execution_time","details","JobLogs","fetchEtlFlowQueueStats","set_job_run_state","RunningJobs","JobRunDetails","stepruns","setEtlFlowJobById","fetchEtlFlowJobById","step_run_id_flag","item","step_run_id","linked_jobs","remoteStep","step_type","step_name","showStepRunStateModal","Routes","user","doLogout","token","decoded","jwt_decode","fetchEtlFlowUserDetails","to","remove_token","exact","path","component","render","Login","user_name","password","login","login_validation","set_login_user_name","set_login_password","GRAPHQL_LOGIN_URL","fetchLoginDetails","token_value","setItem","doLogin","alert","align","onSubmit","preventDefault","App","args_token","args_user","ReactDOM","StrictMode","exports","url","fetch","method","headers"],"mappings":"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","file":"static/js/main.978896b4.chunk.js","sourcesContent":["import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport { fetchCall } from '../utils/GraphQl';\n\nclass CurrentTime extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { currentime: '' }    \n  }\n\n  async fetchEtlFlowJobs() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    \n    var query =  ` query {  currentime {  current_time  } } `\n    const response = await fetchCall(GRAPHQL_URL,query)\n\n    const {data} = await response.json();\n    return data;    \n  }\n\n\n  componentDidMount() {\n    this.fetchEtlFlowJobs().then(({currentime}) => {\n      this.setState(prevState => ({\n        currentime: currentime.current_time\n      }))\n    })\n }\n  \n render(){\n    return (\n         <li className =\"nav-item\">\n             <a className = \"nav-link disabled\">\n                {this.state.currentime} \n             </a>\n         </li>\n    );\n  }\n}\nexport default CurrentTime;","import React from 'react';\n//Bootstrap and jQuery libraries\n// import 'jquery/dist/jquery.min.js';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.min.js';\n\n// import 'popper.js/dist/umd/popper.min.js';\n// import 'popper.js/dist/umd/popper.js';\n\n\n// import '../css/App.css'\n\n// //Datatable Modules\n// import \"datatables.net-dt/js/dataTables.dataTables\"\n// import \"datatables.net-dt/css/jquery.dataTables.min.css\"\n\nclass Error extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  render(){  \n\n    var custom_error = ''\n\n    if(this.props.error === 0) {\n      custom_error = \"ERR_CONNECTION_REFUSED.Server is down\"\n    } else if(this.props.error === 403) { \n      custom_error = \"ERR_ABORTED 403 (Forbidden)\"\n    } else {\n      custom_error = this.props.error\n    }\n\n    return (\n        <div>\n          <table className = \"table table-striped\">\n              <thead class=\"thead-dark\">\n                 <tr>\n                   <th>Error</th>\n                 </tr>\n              </thead> \n              <tbody>\n                  <tr>\n                      <td class=\"text-danger\">{custom_error} </td>\n                  </tr>   \n              </tbody>  \n          </table>\n        </div>\n    );\n  }\n}\nexport default Error;\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport Chartist from 'chartist/dist/chartist.min.js';\nimport ErrorComponent from '../components/Error';\n\nvar ws_url = new URL(\"/ws/etlflow\" , window.location.href)\nws_url.protocol = ws_url.protocol.replace(\"http\",\"ws\")\n\n// var ws = new WebSocket('wss://devetlflow.startv.com/ws/etlflow/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoibWludF9hZG1pbiIsICJyb2xlIjoiYWRtaW4ifQ.gwiUv0vss-3gX5rkPOGTdJ_81n5N3W7Hv1yeGsJj5g8')\n\n// new WebSocket('wss://devetlflow.startv.com/ws/etlflow/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoibWludF9hZG1pbiIsICJyb2xlIjoiYWRtaW4ifQ.gwiUv0vss-3gX5rkPOGTdJ_81n5N3W7Hv1yeGsJj5g8')\n// new WebSocket(ws_url + \"/\" + localStorage.getItem('Authorization'))\n \nclass MemoryGraph extends React.Component {\n  constructor(props){\n    super(props);\n    const GRAPHQL_URL = '/ws/etlflow'\n \n    this.state  = {\n      used: '',\n      total: '',\n      free: '',\n      max: '',\n      error:'',\n      error_code:0,\n    }\n    this.ws = new WebSocket(ws_url + \"/\" + localStorage.getItem('Authorization'))\n \n    this.options =  {\n      low: 0,\n      showArea: true,\n      showPoint: false\n    };\n  }\n \n  call(close_ws){\n \n    if(close_ws === \"true\"){\n      this.ws.close(1000,\"User closed the connection\")\n      document.getElementById(\"statslinknotify\").innerText = \"Real-Time Stats (Offline)\"\n      console.log('ws closed')\n    }\n    else{\n      document.getElementById(\"statslinknotify\").innerText = \"Real-Time Stats (Online)\" \n      if (this.ws.readyState === WebSocket.CLOSED) {\n        this.ws = new WebSocket(ws_url + \"/\" + localStorage.getItem('Authorization'))\n      }\n      this.ws.onopen = () => {\n      console.log('ws connected')\n      }  \n  \n      this.ws.onmessage = evt => {\n      const message = evt.data\n      const obj = JSON.parse(message);\n      var res = obj.memory;\n      this.setState(prevState => ({\n        used: res.used,\n        total: res.total,\n        free: res.free,\n        max: res.max\n      }))\n      } \n  \n      this.ws.onclose = () => {\n        console.log('disconnected')\n      }\n \n      var used_memory_data = {\n       series: [[]]\n        };\n   \n      var free_memory_data = {\n        series: [[]]\n      };\n      \n      var total_memory_data = {\n        series: [[]]\n      };\n  \n      var used_memory_chart = new Chartist.Line('.ct-chart', used_memory_data, this.options);\n      var free_memory_chart = new Chartist.Line('.cpu-chart', free_memory_data, this.options);\n      var total_memory_chart = new Chartist.Line('.cpu-chart-1', total_memory_data, this.options);\n \n      \n      this.updateMemoryChart(used_memory_chart, used_memory_data, this.getMemoryData('usedMemory'),'usedMemory' , 30)\n      this.updateMemoryChart(free_memory_chart, free_memory_data, this.getMemoryData('freeMemory'), 'freeMemory' ,30)\n      this.updateMemoryChart(total_memory_chart, total_memory_data, this.getMemoryData('totalMemory'), 'totalMemory',30)\n    }\n  }\n\n  componentDidMount() {\n    this.call()\n  }\n \n  componentWillUnmount() {\n    this.ws.close()\n  }\n\n  getMemoryData(type) {\n    var used = [];\n    var free = [];\n    var total = [];\n\n    if(type === 'usedMemory') {\n      used.push(this.state.used)\n      return used[0];\n    }\n    else if (type === 'freeMemory') {\n      free.push(this.state.free)\n      return free[0];\n    }\n    else {\n      total.push(this.state.total)\n      return total[0];\n    }\n  }\n\n  updateMemoryChart(chart,data,point,memType,length) {\n    if(data.series[0].length >= length) {\n      data.series[0].shift();\n    }\n    data.series[0].push(point);\n    chart.update(data);\n    setTimeout(() => { this.updateMemoryChart(chart,data,this.getMemoryData(memType),memType,length) }, 1000);\n  }\n\n   render(){ \n    if (this.state.error !== ''){\n      return (\n        <div>\n          <ErrorComponent error={this.state.error}/>\n        </div>\n      );\n     } else {\n      return (\n      <div class=\"card\">\n      <div class=\"card-header\">\n        <a className = \"btn btn-secondary btn-sm\" data-toggle = \"collapse\"  href = \"#streamnotify\" role = \"button\" \n          aria-expanded = \"true\" aria-controls = \"streamnotify\" id = \"statslinknotify\">\n        </a>\n        <ul class = \"pagination float-right\">\n              <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n                    this.call(\"false\")\n                }} >\n                Connect\n              </button>\n              <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n                  this.call(\"true\")\n                }} >\n                Close\n              </button>\n        </ul>      \n      </div>\n    <div className = \"collapse\" id = \"streamnotify\">\n    <div class= \"card-body\">\n    <div class = \"row\">\n      <div class=\"col-sm-3\">\n          <div class=\"card\">\n              <div class=\"card-header\">Used Memory</div>\n              <div class= \"card-body\">\n                  <div class=\"ct-chart\"></div>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-3\">\n          <div class=\"card\">\n              <div class=\"card-header\">Free Memory</div>\n              <div class= \"card-body\">\n                  <div class=\"cpu-chart\"></div>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-3\">\n          <div class=\"card\">\n              <div class=\"card-header\">Total Memory</div>\n              <div class= \"card-body\">\n                  <div class=\"cpu-chart-1 \"></div>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-3\">\n        <div class=\"card\">\n           <div class=\"card-header\">Current Usage</div>\n              <div class= \"card-body\">\n                <div>\n                   <ul class=\"list-group \">\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Used Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.used}</span>\n                       </li>\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Free Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.free}</span>\n                       </li>\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Total Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.total}</span>\n                       </li>\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Max Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.max}</span>\n                       </li>\n                   </ul>\n                </div> \n              </div>\n      </div>\n      </div>\n    </div>\n    <br/>\n    </div>\n    </div>\n    </div>\n  );}\n  }       \n}\n \nexport default MemoryGraph;\n \n\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\n\nclass Refresh extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  \n render(){\n    return (\n      <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n          this.props.call()\n      }}>\n        Refresh\n      </button>\n    );\n  }\n}\nexport default Refresh;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\n\nclass Loader extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  render(){\n    return (\n        <div class=\"d-flex justify-content-center\">\n           <div class=\"spinner-border m-5\" role=\"status\">\n             <span class=\"sr-only\">Loading...</span>\n           </div>\n        </div>\n    );\n  }\n}\nexport default Loader;\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport ErrorComponent from '../components/Error';\nimport RefreshComponent from '../components/Refresh';\nimport LoaderComponent from '../components/Loader';\n\nclass Metrics extends React.Component {\n  constructor(props){\n    super(props);\n  }\n \n  render(){\n \n    if (this.props.error !== ''){\n      return (\n        <div class=\"container\">\n            <ul class = \"pagination justify-content-center\">\n              <RefreshComponent call = {this.props.setMetrics}/>\n            </ul>\n              <ErrorComponent error={this.props.error_code}/>\n        </div>\n      );\n    }\n    else if (this.props.loader){\n        return (\n          <div>\n            <LoaderComponent />\n          </div>\n        )\n    } \n    else {\n      return (\n      <div class=\"card\">\n      <div class=\"card-header\">\n        <a className = \"btn btn-secondary btn-sm\" data-toggle = \"collapse\"  href = \"#streamnotify2\" role = \"button\" \n           aria-expanded = \"true\" aria-controls = \"streamnotify\" id = \"statslinknotify\">Metrics\n        </a>\n        <ul class = \"pagination float-right\">\n          <RefreshComponent call = {this.props.setMetrics}/>  \n        </ul> \n      </div>\n      <div className = \"collapse\" id = \"streamnotify2\">\n      <div class= \"card-body\">\n      <ul class=\"list-group\">\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n              <b>Active Jobs</b>\n            <span  class=\"items1s\" class=\"badge badge-secondary badge-pill\">{this.props.metrics.active_jobs}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n              <b>Active Subscribers</b>\n            <span class=\"badge badge-secondary badge-pill\">{this.props.metrics.active_subscribers}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n              <b>Etl Jobs</b>\n            <span class=\"badge badge-secondary badge-pill\">{this.props.metrics.etl_jobs}</span>\n          </li>\n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n              <b>Cron Jobs</b>\n            <span class=\"badge badge-secondary badge-pill\">{this.props.metrics.cron_jobs}</span>\n          </li> \n          <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n              <b>Build Time</b>\n            <span class=\"badge badge-secondary badge-pill\">{this.props.metrics.build_time}</span>\n          </li>  \n      </ul>\n      </div>\n      </div>\n  </div>\n    );}\n  }\n}\n\n \nexport default Metrics;\n \n\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport Chartist from 'chartist/dist/chartist.min.js';\nimport ErrorComponent from '../components/Error';\nimport { fetchCall } from '../utils/GraphQl';\n\nclass BarGraph extends React.Component {\n  constructor(props){\n    super(props);\n    const GRAPHQL_URL = '/ws/etlflow'\n \n    this.state  = {\n      jobLogs:[],\n      filter: '',\n      limit: '',\n      error:'',\n      error_code:0,\n      load_bar:false\n    }\n \n    this.filterOperation = ['2','5','10']\n    this.limitOperation = ['2','5','10','30','50']\n \n    this.options = {\n      low: 0,\n      showArea: true,\n      showPoint: false\n    };\n  }\n \n  async callApi() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n \n    var query =  ` query { jobLogs { job_name success failed }}`\n   \n    if(this.state.filter !== '' && this.state.limit !== '') {\n      query =  ` query { jobLogs(limit: ${this.state.limit}, filter: ${this.state.filter}  ) { job_name success failed }}`\n    } else  if (this.state.filter !== '') {\n      query =  ` query { jobLogs(filter: ${this.state.filter}) { job_name success failed }}`\n    } else  if (this.state.limit !== '') {\n      query =  ` query { jobLogs(limit: ${this.state.limit}) { job_name success failed }}`\n    }\n \n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    const response = await fetchCall(GRAPHQL_URL,query)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {   \n      const {data} = await response.json()\n      return data;   \n    }\n  }\n\n  setErrorState(error,error_code) {\n    this.setState(prevState => ({\n      error: error,\n      error_code: error_code\n    }))\n  }\n\n  barChart(){\n    var params = {\n      seriesBarDistance: 10,\n      axisX: {\n        offset: 60\n      },\n      axisY: {\n        offset: 80,\n        labelInterpolationFnc: function(value) {\n          return value\n        },\n        scaleMinSpace: 15\n      }\n    }\n\n    if(this.state.load_bar){\n      var job_name_labels = []\n      var job_success = []\n      var job_failed = []\n  \n      this.state.jobLogs.map( (data) => {\n       job_name_labels.push(data.job_name)\n       job_success.push(data.success)\n       job_failed.push(data.failed)\n      })\n  \n      new Chartist.Bar('.ct-chart-2', {\n        labels: job_name_labels,\n        series: [\n          job_success,\n          job_failed,\n        ]\n      }, params);\n    } \n    else{\n      new Chartist.Bar('.ct-chart-2', {\n        labels: [0],\n        series: [\n          [0],\n          [0],\n        ]\n      }, params);  \n  }}\n \n  componentDidMount() {\n    this.setJobLogs(false)\n    this.barChart()  \n  }\n \n\n  setInitialState(){\n    this.setState(prevState => ({ \n      filter: '',\n      limit: ''   \n    }), () => this.setJobLogs(true))\n  }\n \n  setJobLogs = (load_bar) => {\n    this.callApi().then(({jobLogs}) => {\n      this.setState(prevState => ({\n        jobLogs: jobLogs,\n        load_bar: load_bar\n      }),() => this.barChart())\n    }).catch(error => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false\n      }))\n    });  \n  }\n\n  render(){\n\n    var filter_button_name = ''\n    var limit_button_name = ''\n \n    if (this.state.filter !== '') {\n      filter_button_name = this.state.filter\n    }else {\n      filter_button_name = \"Add Filter (In Days)\"\n    }\n \n    if (this.state.limit !== '') {\n      limit_button_name = this.state.limit\n    }else {\n      limit_button_name = \"Add limit\"\n    }\n\n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n         <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.setJobLogs(true) \n                }}>\n               Refresh\n             </button>\n         </ul>\n          <ErrorComponent error={this.state.error_code}/>\n        </div>\n      );\n     } else {\n    return (\n      <div class=\"card\">\n      <div class=\"card-header\">\n      <a className = \"btn btn-secondary btn-sm\" data-toggle = \"collapse\"  href = \"#streamnotify1\" role = \"button\" \n        aria-expanded = \"true\" aria-controls = \"streamnotify1\">Etl Jobs Vs Count (Success/Failed)\n      </a> \n        <ul class = \"pagination float-right\">\n        <div class=\"dropdown\">\n            <button type=\"button\" class=\"btn btn-light dropdown-toggle\" data-toggle=\"dropdown\">\n              {filter_button_name}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              { this.filterOperation.map ( filter => (\n                <a class=\"dropdown-item\">\n                   <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                   this.setState(prevState => ({\n                       filter: filter\n                 }))}}> {filter} </button>\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button type=\"button\" class=\"btn btn-light dropdown-toggle\" data-toggle=\"dropdown\">\n            {limit_button_name}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              { this.limitOperation.map ( limit => (\n                <a class=\"dropdown-item\">\n                   <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                   this.setState(prevState => ({\n                       limit: limit\n                 }))}}> {limit} </button>\n                </a>\n              ))}\n            </div>\n          </div>\n          <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n                this.setInitialState()\n          }}>Clear</button>\n          <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n              this.setJobLogs(true)\n          }} >\n          Refresh\n          </button>\n        </ul>      \n        </div>\n        <div className = \"collapse\" id = \"streamnotify1\">\n        <div class= \"card-body\">\n            <div class=\"ct-chart-2\"></div>\n        </div>\n        </div>\n  </div>\n  );}\n  }       \n}\n \nexport default BarGraph;\n \n\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport MemoryGraph from '../cards/MemoryGraph';\nimport Metrics from '../cards/Metrics';\nimport BarGraph from '../cards/BarGraph';\nimport { fetchCall } from '../utils/GraphQl';\n\nclass Stats extends React.Component {\n  constructor(props){\n    super(props);\n    this.state  = { \n      metrics: [],\n      error: '',\n      loader: false,\n      error_code: 0\n    }\n  }\n\n  async fetchEtlFlowMetrics() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n \n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n    \n    var body = ` query { metrics { active_jobs  active_subscribers etl_jobs cron_jobs  build_time } }`\n    \n    const response = await fetchCall(GRAPHQL_URL,body)  \n \n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json();\n      return data; \n    }  \n  }\n \n  componentDidMount() {\n    this.setMetrics()\n  }\n \n  setMetrics = () => {\n    this.fetchEtlFlowMetrics().then(({metrics}) => {\n      this.setState(prevState => ({\n          metrics: metrics,\n          loader: false\n      }))\n    }).catch(error => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false\n      }))\n  });  \n  }\n  \n  render(){\n    return (\n      <div class = \"container-fluid\">\n                <MemoryGraph GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.logout}  />    \n         <br/>\n        <div class = \"row\">\n            <div class=\"col-sm-9\">\n                <BarGraph GRAPHQL_URL = {this.props.GRAPHQL_URL}  logout={this.props.logout} />   \n            </div>\n            <div class=\"col-sm-3\">\n                <Metrics  metrics = {this.state.metrics} setMetrics={this.setMetrics} error = {this.state.error} error_code = {this.state.error_code} loader = {this.state.loader}/>  \n            </div>    \n        </div>\n      </div>\n  );}\n  }       \n \nexport default Stats;\n \n\n","import React from 'react';\n//Bootstrap and jQuery libraries\n// import 'jquery/dist/jquery.min.js';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.min.js';\n\n// import 'popper.js/dist/umd/popper.min.js';\n// import 'popper.js/dist/umd/popper.js';\n\n// import '../css/App.css'\n\nclass Notification extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  render(){  \n\n    var notification_var = \"\"\n    if(this.props.notification){\n      if(this.props.is_error) {\n         notification_var =\n         <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <h4 class=\"alert-heading\">{this.props.message}</h4>\n            <p>{this.props.errors}</p>\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick = {() => {this.props.setNotification(false)}}>\n               <span aria-hidden=\"true\">&times;</span>\n            </button>\n         </div>\n       } else {\n          notification_var =\n          <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n             <h4 class=\"alert-heading\">{this.props.message}</h4>\n             <p>{this.props.job_props}</p>\n             <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick = {() => {this.props.setNotification(false)}}>\n                <span aria-hidden=\"true\">&times;</span>\n             </button>\n          </div>\n        }  \n    }\n\n    return (\n        <div>\n          {notification_var}\n        </div>\n    );\n  }\n}\nexport default Notification;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport Notification from '../components/Notification';\nimport {fetchCall}  from '../utils/GraphQl';\nimport RefreshComponent from '../components/Refresh';\n\nclass CredentialData extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { credential: [],\n      loader:false,\n      jdbc_values: [],\n      aws_values: [],\n      jdbc_keys: [\"url\",\"user\",\"passsword\",\"driver\"],\n      aws_keys: [\"access_key\",\"secret_key\"],\n      errors: '',\n      is_error: false,\n      credential_name:'',\n      credential_type:'',\n      insert_credential_type: '',\n      error:'',\n      error_code:0,\n\n    }\n    this.filterOperation = [\"JDBC\",\"AWS\"]\n  }\n  \n  async updateCreds(name,type,value) {\n    var props_updated = JSON.stringify(value).replaceAll(\"\\\"?\",\"\").replaceAll(\"?\\\"\",\"\")\n\n    var query = ` mutation { update_credentials (name:\\\"${name}\\\", type:JDBC, value: ${props_updated}) { name } }`\n    if(type === \"aws\") {\n      query = ` mutation { update_credentials (name:\\\"${name}\\\", type:AWS, value: ${props_updated}) { name } }`\n    }\n\n\n    const response = await fetchCall(this.props.GRAPHQL_URL,query)\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data,errors} = await response.json();\n\n      if(JSON.parse(JSON.stringify(data.update_credentials)) !== null){\n        this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,JSON.parse(JSON.stringify(errors)))\n      }\n  \n      return data;    \n    }   \n  }\n\n  async insertCreds(name,type,value) {\n    \n    var props_updated = JSON.stringify(value).replaceAll(\"\\\"?\",\"\").replaceAll(\"?\\\"\",\"\")\n    var query = ` mutation { add_credentials (name:\\\"${name}\\\", type:JDBC, value: ${props_updated}) { name } }`\n    if(type === \"AWS\") {\n      query = ` mutation { add_credentials (name:\\\"${name}\\\", type:AWS, value: ${props_updated}) { name } }`\n    }\n\n    const response = await fetchCall(this.props.GRAPHQL_URL,query)\n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data,errors} = await response.json();\n      if(JSON.parse(JSON.stringify(data.add_credentials)) !== null){\n        this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,errors[0].message)\n      }\n  \n      return data;    \n    } \n    \n  }\n\n  setUpdateCredInitialState(){\n    this.setState(prevState => ({  \n      aws_values: [],\n      jdbc_values: []\n    }))\n  }\n\n  setNotification = state => {\n    this.setState(prevState => ({\n      notification: state\n    }))\n  }\n\n  createUpdateCredUI(){\n    if(this.state.credential_type === \"jdbc\"){\n    return this.state.jdbc_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.jdbc_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"***********\" onChange={this.setInsertValues.bind(this, i)} />\n            </div>    \n          </div> \n        </div> \n        </div>            \n    )\n    }else if(this.state.credential_type === \"aws\"){\n      return this.state.aws_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.aws_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"***********\" onChange={this.setInsertValues.bind(this, i)} />\n            </div>\n          </div> \n        </div> \n        </div>            \n    )\n    }\n  }\n\n  createAddCredUI(){\n    if(this.state.insert_credential_type === \"JDBC\"){\n    return this.state.jdbc_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.jdbc_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"Type Value\" onChange={this.setValues.bind(this, i)} />\n            </div>\n          </div> \n        </div> \n        </div>            \n    )\n    }else if(this.state.insert_credential_type === \"AWS\"){\n      return this.state.aws_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.aws_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"Type Value\" onChange={this.setValues.bind(this, i)} />\n            </div>\n          </div> \n        </div> \n        </div>            \n    )\n    }\n  }\n\n  setAddCredInitialState(){\n  this.setState(prevState => ({  \n    insert_credential_type: '',\n    aws_values: [],\n    jdbc_values: []\n  }))\n  document.getElementById(\"cred_name\").value = ''\n  }\n\n  setValues(i, event) {\n\n  if(this.state.insert_credential_type === \"JDBC\") {\n    let jdbc_values = [...this.state.jdbc_values];\n    jdbc_values[i] =  event.target.value;\n    this.setState({ jdbc_values });\n   } else{ \n    let aws_values = [...this.state.aws_values];\n    aws_values[i] =  event.target.value;\n    this.setState({ aws_values });\n   }\n  }\n \n  setInsertValues(i, event) {\n\n  if(this.state.credential_type === \"jdbc\") {\n    let jdbc_values = [...this.state.jdbc_values];\n    jdbc_values[i] =  event.target.value;\n    this.setState({ jdbc_values });\n   } else{ \n    let aws_values = [...this.state.aws_values];\n    aws_values[i] =  event.target.value;\n    this.setState({ aws_values });\n   }\n  }\n\n  setCredUpdateDeails(name){\n    this.setState(prevState => ({\n      credential_name: name\n      }))\n  } \n\n  updateCredentials() {\n\n    var final_props = []\n    var i;\n\n    if(this.state.credential_type === \"jdbc\") {\n      for (i = 0; i < this.state.jdbc_keys.length; i++) {\n        var props = {[\"?key?\"] : this.state.jdbc_keys[i],[\"?value?\"] : this.state.jdbc_values[i]}\n       final_props[i] =  props\n       }\n     } else{ \n       for (i = 0; i < this.state.aws_keys.length; i++) {\n         var props = {[\"?key?\"] : this.state.aws_keys[i],[\"?value?\"] : this.state.aws_values[i]}\n        final_props[i] =  props\n        }\n     }\n \n   var props = ''\n \n   this.updateCreds(this.state.credential_name,this.state.credential_type,final_props).then(({update_credentials}) => {\n     this.setNotification(true)\n     var data =  JSON.parse(JSON.stringify(update_credentials))\n   }).catch(error => {\n    this.setState(prevState => ({\n      error: error,\n      loader: false\n    }))\n});\n\n   this.setState(prevState => ({  \n    credential_type: '',\n    aws_values: [],\n    jdbc_values: []\n  }))\n  }\n\n  async addCredentials() {\n\n    var final_props = []\n    var i;\n\n    if(this.state.insert_credential_type === \"JDBC\") {\n     for (i = 0; i < this.state.jdbc_keys.length; i++) {\n       var props = {[\"?key?\"] : this.state.jdbc_keys[i],[\"?value?\"] : this.state.jdbc_values[i]}\n      final_props[i] =  props\n      }\n    } else{ \n      for (i = 0; i < this.state.aws_keys.length; i++) {\n        var props = {[\"?key?\"] : this.state.aws_keys[i],[\"?value?\"] : this.state.aws_values[i]}\n       final_props[i] =  props\n       }\n    }\n \n   var props = ''\n \n   var cred_name = document.getElementById(\"cred_name\").value\n\n   this.insertCreds(cred_name,this.state.insert_credential_type,final_props).then(({add_credentials}) => {\n     this.setNotification(true)\n     var data =  JSON.parse(JSON.stringify(add_credentials))\n   }, () => this.setAddCredInitialState())\n\n   this.setState(prevState => ({  \n    insert_credential_type: '',\n    aws_values: [],\n    jdbc_values: []\n  }))\n  document.getElementById(\"cred_name\").value = ''\n  }\n\n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                   \n      }))\n  }\n\n  render(){\n\n    var filter_button_name = ''\n    if (this.state.credential_type !== '') {\n      filter_button_name = this.state.credential_type  \n    }else {\n      filter_button_name = \"Add Credential Type\"\n    } \n\n    var filter_insert_button_name = ''\n    if (this.state.insert_credential_type !== '') {\n      filter_insert_button_name = this.state.insert_credential_type  \n    }else {\n      filter_insert_button_name = \"Add Credential Type\"\n    } \n\n    var filter_update_button_name = ''\n    if (this.state.credential_type !== '') {\n      filter_update_button_name = this.state.credential_type  \n    }else {\n      filter_update_button_name = \"Add Credential Type\"\n    } \n\n    var message = \"\"\n    var job_props = ''\n    var errors = ''\n\n    if(this.state.notification){\n      if(this.state.is_error) {\n         message = 'Error while Updatating Credential ! '\n         job_props = ''\n         errors = this.state.errors\n       } else {\n          message = 'Credentials  submitted successfully! '\n          job_props = ''\n          errors = ''\n        }  \n    }\n\n    return (\n      <div className=\"container\">\n      <div><Notification notification={this.state.notification} is_error={this.state.is_error}  errors = {errors}  message={message} job_props = {job_props} setNotification={this.setNotification}/></div>\n        <ul class = \"pagination justify-content-center\">\n          <RefreshComponent call = {this.props.setCredentials}/>\n          <div class=\"inner\"> \n             <button type=\"button\" class=\"btn btn-warning ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal1\">\n                 Add New Credentials\n             </button>\n             <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel1\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\" role=\"document\">\n                  <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h5 class=\"modal-title\" id=\"exampleModalLabel1\">Add Credentials</h5>\n                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                    </div>\n                    <div class=\"modal-body\">\n                      <div class=\"row\">\n                        <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                          <div class=\"form-group\">\n                             Credential Name\n                             <input class=\"form-control\" placeholder=\"Add Name\"  type=\"text\" id=\"cred_name\"/>\n                          </div>\n                        </div> \n                        <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                          <div class=\"form-group\">\n                          <div class=\"dropdown\">\n                            <button type=\"button\" class=\"btn btn-light dropdown-toggle\" data-toggle=\"dropdown\">\n                              {filter_insert_button_name}\n                            </button>\n                            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                              { this.filterOperation.map ( filter => (\n                                <a class=\"dropdown-item\">\n                                   <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                                   this.setState(prevState => ({\n                                    insert_credential_type: filter\n                                 }))\n                                 }}> {filter} </button>\n                                </a>\n                              ))}\n                            </div>\n                          </div> \n                          </div>\n                        </div>  \n                      </div> \n                      {this.createAddCredUI()} \n                      <input type=\"button\" class=\"btn btn-primary ml-2\" value=\"Submit\" onClick = {() => this.addCredentials()}/>\n                    </div>\n                    <div class=\"modal-footer\">\n                      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n           </div>\n        </ul>\n        <table id=\"jobruns\" class=\"table table-sm table-bordered\">\n            <thead class=\"thead-dark\">\n                  <tr>\n                    <th>Credential Name</th>\n                    <th>Type</th>\n                    <th>Last Updated</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                  <tbody>\n                  {this.props.data.map( data => (\n                    <tr>\n                      <td>{data.name}</td>\n                      <td>{data.type}</td>\n                      <td>{data.valid_from}</td>\n                      <td>\n                      <div class=\"inner\">\n                           <button type=\"button\" class=\"btn btn-warning ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal\"  onClick = {() => \n                                    this.setState(prevState => ({\n                                      credential_name: data.name,\n                                      credential_type: data.type\n                                }))}>\n                               Update\n                           </button>\n                           <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                              <div class=\"modal-dialog\" role=\"document\">\n                                <div class=\"modal-content\">\n                                  <div class=\"modal-header\">\n                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update Credentials</h5>\n                                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                      <span aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                  </div>\n                                  <div class=\"modal-body\">\n                                  <div class=\"row\">\n                                      <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                                        <div class=\"form-group\">\n                                           Credential Name\n                                           <input class=\"form-control\" placeholder={this.state.credential_name}  type=\"text\" disabled/>\n                                        </div>\n                                      </div> \n                                      <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                                        <div class=\"form-group\">\n                                            Type\n                                           <input class=\"form-control\" placeholder={this.state.credential_type}   type=\"text\" disabled/>\n                                        </div>\n                                      </div>  \n                                    </div> \n                                    {this.createUpdateCredUI()}        \n                                    <input type=\"button\" class=\"btn btn-primary ml-2\" value=\"Submit\" onClick = {() => this.updateCredentials()}/>\n                                  </div>\n                                  <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                         </div>\n                      </td>\n                    </tr>\n                  ))}\n                  </tbody>\n             </table>  \n           </div>\n    );\n  }      \n}\n\nexport default CredentialData;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\nimport LoaderComponent from '../components/Loader';\nimport ErrorComponent from '../components/Error';\nimport CredentialData from '../cards/Credential';\nimport RefreshComponent from '../components/Refresh';\n\nimport { fetchCall } from '../utils/GraphQl';\n\nclass Credential extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { \n      credential: [],\n      loader:false,\n      error:'',\n      error_code:0,\n\n    }\n  }\n  \n  async fetchEtlFlowCreds() {\n    \n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    var body = ` query { credential { name  type  valid_from } } `\n    const response = await fetchCall(this.props.GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json();\n      return data;   \n  }\n}\n\n  componentDidMount() {\n    //calling getInfo api\n    this.setCredentials()\n  }\n\n  setCredentials = () => {\n    this.fetchEtlFlowCreds().then(({credential}) => {\n      this.setState(prevState => ({\n        credential: credential,\n        loader: false\n      }))\n    }).catch(error => {\n        this.setState(prevState => ({\n          error: error,\n          loader: false\n        }))\n    });\n  }\n\n  render(){\n\n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n           <ul class = \"pagination justify-content-center\">\n              <RefreshComponent call = {this.setCredentials}/>\n           </ul>\n           <ErrorComponent   error ={this.state.error_code}/>\n        </div>\n      );\n    } \n    else if (this.state.loader){\n      return (\n        <div>\n          <LoaderComponent/>\n        </div>\n      );\n    }\n    else{\n      return (\n        <div className=\"container\">\n          <CredentialData data = {this.state.credential} setCredentials={this.setCredentials} GRAPHQL_URL = {this.props.GRAPHQL_URL} />\n        </div>\n      );\n   }      \n  }\n}\n\nexport default Credential;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\nimport { withRouter } from 'react-router'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport Notification from '../components/Notification';\nimport RefreshComponent from '../components/Refresh';\nimport { fetchCall } from '../utils/GraphQl';\n\nimport $ from 'jquery';\n\nclass JobListData extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { \n      jobs: [],\n      notification: false,\n      run_job_props: '',\n      job_name: '',\n      errors: [],\n      is_error: false,\n      is_active: true,\n      values: [],keys: [],\n      error_code:0,\n\n    }\n  }\n\n  async updateJobActiveState(job_name,state) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n\n    var body = `mutation {  update_job_state (name:\\\"${job_name}\\\" ,state: ${state}){ } }`\n    const response = await fetchCall(GRAPHQL_URL,body)\n    \n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } else {  \n      const {data} = await response.json();\n      return data;    \n    }   \n  }\n\n  async runEtlJob(job_name,props) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    var query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\"){\n          name\n          props {key value}\n      }\n      }\n    ` \n    if(props.length > 0) {\n      var props_updated = JSON.stringify(props).replaceAll(\"\\\"$\",\"\").replaceAll(\"$\\\"\",\"\")\n      query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\" ,props: ${props_updated}){\n          name\n          props {key value}\n      }\n      }\n    ` \n    }\n    this.setState(prevState => ({\n      loader: true\n    }))\n    \n    const response = await fetchCall(GRAPHQL_URL,query)\n\n   if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data,errors} = await response.json();\n      if(JSON.parse(JSON.stringify(data.run_job)) !== null){\n          this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,JSON.parse(JSON.stringify(errors)))\n      }\n      return data;  \n    }\n  }\n\n  componentDidMount() {\n    var dt = $('#joblist').DataTable({\n      \"order\": [[ 6, \"desc\" ]]\n  });\n    dt.column(6).visible(false);\n    dt.column(3).visible(false);\n\n  }\n\n  showModal(data)\n  {\n    var job_properties = \"\" \n    { \n      data.map(  props =>\n        job_properties  += \"<b>\"+ props.key + \"</b>\" +\"=\" + props.value + \"<br></br>\"\n    )}\n\n   {$(\"#jobListeModal .modal-body\").html(job_properties)}\n   $(\"#jobListeModal\").modal();\n  }\n\n  setNotification = state => {\n    this.setState(prevState => ({\n      notification: state\n    }))\n  }\n\n  setJobDeails(job_name,props){\n    this.setState(prevState => ({\n      job_name: job_name,\n      run_job_props: props                    \n      }))\n  }\n\n  setErrorState(error,error_code) {\n    this.setState(prevState => ({\n      error: error,\n      error_code: error_code\n    }))\n  }\n\n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                    \n      }))\n  }\n\n  handleOnClick(job_name){    \n    this.props.history.push('/JobRuns/' + job_name)\n  }\n\n  createUI(){\n    return this.state.values.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" value={this.state.keys[i]} type=\"text\" placeholder=\"Type Key\" onChange={this.setRunJobKeys.bind(this, i)} />\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\" value={el||''} type=\"text\"  placeholder=\"Type Value\" onChange={this.setRunJobValues.bind(this, i)} />\n            </div>\n          </div> \n         <div class=\"col-xs-3\">\n             <input type='button' class=\"btn btn-danger\" value='-' onClick={this.removeProps.bind(this, i)}/>\n         </div>\n        </div> \n        </div>            \n    )\n  }\n\n\n  setRunJobValues(i, event) {\n    let values = [...this.state.values];\n    values[i] =  event.target.value;\n    this.setState({ values });\n  }\n\n  setRunJobKeys(i, event) {\n  let keys = [...this.state.keys];\n  keys[i] =  event.target.value;\n  this.setState({ keys });\n  }\n \n  addProps(){\n   this.setState(prevState => ({ values: [...prevState.values, '']}))\n  }\n \n  removeProps(i){\n\n    let values = [...this.state.values];\n    values.splice(i,1); \n    this.setState({ values });\n\n    let keys = [...this.state.keys];\n    keys.splice(i,1);\n    this.setState({ keys });\n  }\n\n  submitRunJob() {\n\n   var final_props = []\n   var i;\n   for (i = 0; i < this.state.keys.length; i++) {\n    var props = {[\"$key$\"] : this.state.keys[i],[\"$value$\"] : this.state.values[i]}\n    final_props[i] =  props\n   }\n\n  var props = ''\n\n  this.runEtlJob(this.state.job_name.replace(/^\"(.*)\"$/, '$1'),final_props).then(({run_job}) => {\n    this.setNotification(true)\n    var data =  JSON.parse(JSON.stringify(run_job))\n    if(data !== null){\n        props = JSON.stringify(data[\"props\"]) \n        var job_name = JSON.stringify(data[\"name\"]) \n        this.setJobDeails(job_name,props)\n   }})    \n  }\n\n  render(){  \n\n    var message = ''\n    var job_props = ''\n    var errors = ''\n    if(this.state.notification){\n      job_props = this.state.run_job_props\n      if(this.state.is_error) {\n          message = 'Error while submitting job!'\n          JSON.parse(JSON.stringify(this.state.errors)).map( (data) => {\n            errors = data.message\n          })\n       } else {\n          message = ' Job ' +  this.state.job_name.replace(/^\"(.*)\"$/, '$1') +  ' submitted successfully! '\n        }  \n    } \n\n    return (\n          <div class=\"container-fluid\">\n          <div><Notification notification={this.state.notification} is_error={this.state.is_error}  errors = {errors}  message={message} job_props = {job_props} setNotification={this.setNotification}/></div>\n          <ul class = \"pagination justify-content-center\">\n            <RefreshComponent call = {this.props.get_etl_jobs}/>\n          </ul>\n          <table id=\"joblist\" class=\"table table-sm table-bordered\">\n            <thead class=\"thead-dark\">\n                  <tr>\n                    <th>Active/Inactive</th>\n                    <th>Job Name</th>\n                    <th>Schedule</th>\n                    <th>Next Schedule</th>\n                    <th>Schedule Remaining Time</th>\n                    <th>Job Last Run</th>\n                    <th>Job Last Time</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                  <tbody>\n                  {this.props.data.map( (data) => (\n                    <tr>\n                      <td>{(() => {\n                           if (this.state.is_active && data.is_active) {\n                             return (\n                               <div className = \"checkbox\">\n                                 <input type=\"checkbox\"\n                                     aria-describedby=\"UsernameHelp\"\n                                     data-toggle = \"toggle\"\n                                     defaultChecked\n                                     onClick={e => this.updateJobActiveState(data.name,false).then(({update_job_state}) => {\n                                      this.props.get_etl_jobs()\n                                      this.setState(prevState => ({  \n                                        is_active: false\n                                      }))\n                                    })}>\n                                 </input>\n                               </div>\n                             )\n                           } else {\n                            return (\n                              <div className = \"checkbox\">\n                                <input type=\"checkbox\"\n                                     aria-describedby=\"UsernameHelp\"\n                                     data-toggle = \"toggle\"\n                                     onClick={e => this.updateJobActiveState(data.name,true).then(({update_job_state}) => {\n                                      this.props.get_etl_jobs()\n                                      this.setState(prevState => ({  \n                                        is_active: true\n                                      }))\n                                    })}>\n                                 </input>\n                              </div>\n                            )\n                           }\n                         })()}\n                      </td>\n                        <td> <button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\" onClick = {() => this.handleOnClick(data.name)}>{data.name}</button></td>\n                      <td>{data.schedule}</td>\n                      <td>{data.nextSchedule}</td>\n                      <td data-order={data.nextSchedule}>{data.schduleRemainingTime}</td>\n                      <td data-order={data.last_run_time}>\n                      {(() => {\n\n                           if (data.last_run_time === 0) {\n                             return (\n                               <div>\n                               </div>\n                             )\n                           } else {\n                             return (\n                               <div>  \n                                  {data.last_run_description}\n                               </div>\n                             )\n                           } \n                         })()}\n                      </td>\n                      <td>{data.last_run_time}</td>\n\n                      <td >\n                      <div class='row'>\n                      <div class='col-xs-12 button-wrapper' class=\"inner\">\n                          <button type=\"button\" class=\"btn btn-secondary ml-2\" data-toggle=\"modal\" onClick = {() => this.showModal(data.props)}>\n                            Properties\n                          </button>\n                          <div class=\"modal fade\" id=\"jobListeModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                              <div class=\"modal-content\">     \n                                <div class=\"modal-header\">\n                                  <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                  </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n\n                          <div class=\"inner\">\n                             <button type=\"button\" class=\"btn btn-warning ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick = {() => \n                                      this.setState(prevState => ({\n                                          job_name: data.name\n                                  }))}>\n                                 Run\n                             </button>\n                             <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\" role=\"document\">\n                                  <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Run Job</h5>\n                                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                      </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                       {this.createUI()}        \n                                      <input type='button' class=\"btn btn-primary ml-2\" value='Add Properties' onClick={this.addProps.bind(this)}/>\n                                      <input type=\"button\" class=\"btn btn-primary ml-2\" value=\"Submit\" onClick = {() => this.submitRunJob()}/>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                           </div>\n                           </div>\n                           </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n            </table>\n      </div>     \n    );\n  }\n}\nexport default withRouter(JobListData)","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport LoaderComponent from '../components/Loader';\nimport ErrorComponent from '../components/Error';\nimport RefreshComponent from '../components/Refresh';\nimport JobListData from '../cards/JobList';\n\nclass JobList extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){  \n    if (this.props.error !== ''){\n      return (\n        <div class=\"container\">\n          <ul class = \"pagination justify-content-center\">\n          <RefreshComponent call = {this.props.get_etl_jobs}/>\n          </ul>\n          <ErrorComponent error={this.props.error_code}/>\n        </div>\n      );\n     } \n     else if (this.props.loader){\n      return (\n        <div>\n          <LoaderComponent />\n        </div>\n      );\n    }\n    else{\n    return (\n        <div class=\"container-fluid\">\n          <JobListData  data = {this.props.jobs} get_etl_jobs = {this.props.get_etl_jobs} GRAPHQL_URL = {this.props.GRAPHQL_URL} />\n        </div>     \n    );}\n  }\n}\nexport default JobList;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport '../css/App.css'\nimport { withRouter } from 'react-router'\nimport Notification from '../components/Notification';\nimport { fetchCall } from '../utils/GraphQl';\nimport RefreshComponent from '../components/Refresh';\n\nclass JobRunsData extends React.Component {\n  constructor(props){\n    super(props); \n    this.job_run_id = ''\n    this.filterOperation = [\"IN\",\"NOT IN\"]\n    this.state  = { \n      jobruns: [],\n      job_name: '',\n      retry_job_name: '',\n      filter_start_date: '',\n      filter_end_date: '',\n      paginationValue: 0,\n      loader:false,\n      errors: [],\n      is_error: false,\n      notification: false,\n      run_job_props: '',\n      error:'',\n      error_code:0,\n\n    }\n\n  }\n\n\n  async runEtlJob(job_name,props) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    const token = localStorage.getItem('Authorization')\n\n    var query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\"){\n          name\n          props {key value}\n      }\n      }\n    ` \n    if(props.length > 0) {\n      var props_updated = [JSON.stringify(props).replaceAll(\"\\\"$\",\"\").replaceAll(\"$\\\"\",\"\")]   \n      query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\" ,props: ${props_updated}){\n          name\n          props {key value}\n      }\n      }\n    ` \n    }\n    this.setState(prevState => ({\n      loader: true\n    }))\n\n    const response = await fetchCall(GRAPHQL_URL,query)\n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      this.setState(prevState => ({\n        loader: false\n      }))\n      const {data,errors} = await response.json();\n      if(JSON.parse(JSON.stringify(data.run_job)) !== null){\n        this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,JSON.parse(JSON.stringify(errors)))\n      }\n      return data;  \n    }  \n  }\n\n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                    \n      }))\n  }\n\n  setInterval() {\n    this.timerID = setInterval(\n      () => this.fetchEtlFlowJobs(),\n      1000 * 1000\n    );\n  }\n\n\n  showModal(data)\n {\n   var props = ''\n   var data_jobruns = JSON.parse(data)\n\n   for(var key in data_jobruns) {\n   { \n       props  += \"<b>\"+ key + \"</b>\" +\"=\" + data_jobruns[key]+ \"<br></br>\"\n   }\n  {$(\"#jobRunModal .modal-body\").html(props)}\n  $(\"#jobRunModal\").modal();\n }\n  }\n\n  retryJobRun(job_name,data)\n  {\n   var final_props = []\n   var data_jobruns = JSON.parse(data)\n   var default_props=[\"job_send_slack_notification\", \"job_enable_db_logging\", \"job_notification_level\"];\n\n   var i = 0\n   var final_props = []\n   var i;\n   for(var key in data_jobruns) {\n     if(!default_props.includes(key)){\n        final_props[i] =  {[\"$key$\"] : key,[\"$value$\"] : data_jobruns[key]}\n        i++\n     }\n   }\n   var props = ''\n\n\n   this.runEtlJob(job_name,final_props).then(({run_job}) => {\n    this.setNotification(true)\n    var data =  JSON.parse(JSON.stringify(run_job))\n    if(data !== null){\n        props = JSON.stringify(data[\"props\"]) \n        var job_name = JSON.stringify(data[\"name\"]) \n        this.setJobDeails(job_name,props)\n   }});     \n  }\n\n  setJobDeails(job_name,props){\n  this.setState(prevState => ({\n    retry_job_name: job_name,\n    run_job_props: props                    \n    }))\n  }\n\n  setNotification = state => {\n    this.setState(prevState => ({\n      notification: state\n    }))\n  }\n\n  showJobRunStateModal(data)\n {\n  {$(\"#jobRunStateModal .modal-body\").html(data)}\n  $(\"#jobRunStateModal\").modal();\n  }\n\n  handleOnClick(job_id){    \n  this.props.history.push('/JobRunDetails/' + job_id)\n  }\n\n  render(){\n\n    \n   var button = ''\n   var filter_button_name = '' \n   var filter_button_job_name = '' \n   var filter_start_date = ''  \n   var filter_end_date = ''  \n   var filter_back_button = ''\n\n   var message = ''\n   var job_props = ''\n   var errors = ''\n   if(this.state.notification){\n     job_props = this.state.run_job_props\n     if(this.state.is_error) {\n         message = 'Error while submitting job!'\n         JSON.parse(JSON.stringify(this.state.errors)).map( (data) => {\n           errors = data.message\n         })\n      } else {\n         message = ' Job ' +  this.state.retry_job_name.replace(/^\"(.*)\"$/, '$1') +  ' submitted successfully! '\n       }  \n   } \n\n   //Code for adding pagination element\n  if (this.props.paginationValue === 0) {\n    button = <li class=\"page-item disabled\">\n    <input type=\"button\" value=\"Previous\" class=\"page-link btn btn-secondary btn-sm\"/></li>\n  } else {\n    button =  <li class=\"page-item\">\n    <input type=\"button\" value=\"Previous\" class=\"page-link btn btn-secondary btn-sm\" onClick = {() => {\n            this.props.decPaginationValue(this.state.paginationValue - 10)\n    }}/></li>\n  } \n\n   //Code for adding button name\n  if (this.props.filter !== '') {\n    filter_button_name = this.props.filter\n  }else {\n    filter_button_name = \"Add Filter\"\n  } \n\n   //Code for adding button name\n  if (this.props.job_name !== '') {\n     filter_button_job_name = this.props.job_name\n  }else {\n     filter_button_job_name = \"Type to search\"\n  } \n\n  if (this.props.filter_start_date !== '') {\n   filter_start_date = this.props.filter_start_date\n  }else {\n    filter_start_date = \"Start Date\"\n  } \n\n  if (this.props.filter_end_date !== '') {\n    filter_end_date = this.props.filter_end_date\n  }else {\n    filter_end_date = \"End Date\"\n  } \n\n  if(this.props.match.params.job_name !== undefined){\n    filter_back_button= <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                          this.props.history.push('/')\n                         }} >\n                        Back\n                        </button>\n  }\n\n  return (\n     <div className=\"container-fluid\">\n       <div><Notification notification={this.state.notification} is_error={this.state.is_error}  errors = {this.state.errors}  message={message} job_props = {job_props} setNotification={this.setNotification}/></div>\n       <ul class = \"pagination justify-content-center\">\n         <div class=\"dropdown\">\n            <button class=\"btn btn-light dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n               {filter_button_name}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              { this.filterOperation.map ( filter => (\n                   <a class=\"dropdown-item\">\n                      <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                           this.props.setFilterName(filter)\n                       }}> {filter} </button>\n                   </a>\n              ))}\n            </div>\n         </div>\n         <div className =\"form-inline float-right\">\n             <div className=\"mb-1\">\n             <input type=\"text\"\n                        className=\"form-control input-sm\"\n                        list = \"datalistOptions\"\n                        id = \"exampleDataList\"\n                        placeholder = {filter_button_job_name}\n                        onChange={e => this.props.setJobName(document.getElementById(\"exampleDataList\").value)}></input>      \n             </div>\n             <datalist id = \"datalistOptions\">\n               {this.props.jobs.map( data => (\n                 <option value = {data.name}></option>\n               ))}\n             </datalist> \n         </div>\n         <div class = \"form-inline float-right\">\n              <div class = \"mb-1\"> \n                  <input type=\"date\"\n                         className=\"form-control input-sm\"\n                         placeholder={filter_start_date}\n                         id = \"start_date\"\n                         onChange={e => this.props.setFilterStartDate(document.getElementById(\"start_date\").value)}\n                   ></input>\n              </div>\n              <div class = \"mb-1\"> \n                  <input type=\"date\"\n                         className=\"form-control input-sm\"\n                         placeholder={filter_end_date}\n                         id = \"end_date\"\n                         onChange={e => this.props.setFilterEndDate(document.getElementById(\"end_date\").value)}\n                   ></input> \n              </div>    \n         </div> \n         <button class= \"btn btn btn-sm\" type=\"button \" onClick= {() => {\n            this.props.setInitialState()\n            }}>\n            Clear\n         </button>\n         <RefreshComponent call = {this.props.setJobRuns}/>\n         {filter_back_button}\n       </ul>\n       <table id=\"jobruns\" class=\"table table-sm table-bordered\">\n           <thead class=\"thead-dark\">\n                 <tr>\n                   <th>Job Name</th>\n                   <th>Job Type</th>\n                   <th>Job Start Time</th>\n                   <th>Elapsed Time</th>\n                   <th>Job Status</th>\n                   <th>Actions</th>\n                 </tr>\n               </thead>\n                 <tbody>\n                 {this.props.data.map( data => (\n                   <tr>\n                     <td> <button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\" onClick = {() => this.handleOnClick(data.job_run_id)}>{data.job_name}</button></td>\n                     <td>{data.job_type}</td>\n                     <td>{data.start_time}</td>\n                     <td>{data.elapsed_time}</td>\n                     <td>\n                     {(() => {\n                           if (data.state === \"pass\" || data.state == \"\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-success\">{data.state}</p>\n                               </div>\n                             )\n                           } else if (data.state === \"started\" || data.state == \"running\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-warning\">{data.state}</p>\n                               </div>\n                             )\n                           } else {\n                            return (\n                              <div>\n                                 <button type=\"button\" class=\"btn btn-danger btn btn-sm\" data-toggle=\"modal\" onClick = {() => this.showJobRunStateModal(data.state)}>\n                                     Error\n                                 </button>\n                            \n                                 <div class=\"modal fade\" id=\"jobRunStateModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                   <div class=\"modal-dialog\" role=\"document\">\n                                     <div class=\"modal-content\">\n                                       <div class=\"modal-header\">\n                                         <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                           <span aria-hidden=\"true\">&times;</span>\n                                         </button>\n                                       </div>\n                                       <div class=\"modal-body\">\n                                       </div>\n                                       <div class=\"modal-footer\">\n                                         <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                       </div>\n                                     </div>\n                                   </div>\n                                 </div>\n                              </div>\n                            )\n                           }\n                         })()}\n                     </td>\n                     <td>\n                     <div class='row'>\n                     <div class='col-xs-12 button-wrapper' class=\"inner\">\n                         <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" data-toggle=\"modal\" onClick = {() => this.showModal(data.properties)}>\n                           Properties\n                         </button>\n                         \n                         <div class=\"modal fade\" id=\"jobRunModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                           <div class=\"modal-dialog\" role=\"document\">\n                             <div class=\"modal-content\">\n                               <div class=\"modal-header\">\n                                 <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                 <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                   <span aria-hidden=\"true\">&times;</span>\n                                 </button>\n                               </div>\n                               <div class=\"modal-body\">\n                               </div>\n                               <div class=\"modal-footer\">\n                                 <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                               </div>\n                             </div>\n                           </div>\n                         </div>\n\n                         {(() => {\n                           if (data.state === \"pass\" || data.state == \"\" || data.state == \"started\" ) {\n                             return (\n                               <div>\n                               </div>\n                             )\n                           } else {\n                             return (\n                               <div class=\"inner\">  \n                                  <button type=\"button\" class=\"btn btn-warning btn-sm ml-2\" data-toggle=\"modal\" onClick = {() => this.retryJobRun(data.job_name,data.properties)}>\n                                      Retry\n                                  </button>\n                               </div>\n                             )\n                           } \n                         })()}\n                        </div>\n                        </div> \n                     </td>\n                   </tr>\n                 ))}\n                 </tbody>\n            </table>  \n            <nav aria-label=\"Page navigation example\">\n               <ul class=\"pagination justify-content-center\">\n                 {button}\n                 <li class=\"page-item\"><input type=\"button\" value=\"Next\" class=\"page-link btn btn-secondary btn-sm\" onClick = {() => {\n                    this.props.incPaginationValue()\n                   }}/>\n                 </li>\n               </ul>\n            </nav>\n          </div>\n   );\n  }\n}\n\n// export default JobRuns; \nexport default withRouter(JobRunsData)\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport '../css/App.css'\nimport { withRouter } from 'react-router'\nimport ErrorComponent from '../components/Error';\nimport LoaderComponent from '../components/Loader';\nimport { fetchCall } from '../utils/GraphQl';\nimport RefreshComponent from '../components/Refresh';\nimport JobRunsData from '../cards/JobRuns';\n\nclass JobRuns extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { \n      jobruns: [],\n      job_name: '',\n      filter: '',\n      filter_start_date: '',\n      filter_end_date: '',\n      error:'',\n      error_code:0,\n      paginationValue:0\n    }\n    this.incPaginationValue = this.incPaginationValue.bind(this);\n    this.decPaginationValue = this.decPaginationValue.bind(this);\n    this.setJobName = this.setJobName.bind(this);\n    this.setFilterStartDate = this.setFilterStartDate.bind(this);\n    this.setFilterEndDate = this.setFilterEndDate.bind(this);\n    this.setInitialState = this.setInitialState.bind(this);\n    this.setFilterName = this.setFilterName.bind(this);\n  }\n\n  async fetchEtlFlowJobs(value) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n\n    const limit = 10;\n    const offset = value\n\n    var query = ` query { jobruns(limit: ${limit} , offset: ${offset}){ job_run_id job_name properties state start_time elapsed_time job_type is_master}}`\n    \n    if(this.props.match.params.job_name !== undefined){\n      query = ` query { jobruns(limit: ${limit} , offset: ${offset} ,filter: \"IN\", jobName: \\\"${this.props.match.params.job_name}\\\"  )\n              { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n\n      if (this.state.filter_end_date !== \"\") {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset},  startTime: \\\"${this.state.filter_start_date}\\\", endTime: \\\"${this.state.filter_end_date}\\\",filter: \"IN\", jobName: \\\"${this.props.match.params.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } \n\n      this.setState(prevState => ({\n        filter: 'IN',\n        job_name: this.props.match.params.job_name\n      }))\n\n    } else {\n      if (this.state.filter_end_date !== \"\" && this.state.filter !== \"\" ) {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset},  startTime: \\\"${this.state.filter_start_date}\\\", endTime: \\\"${this.state.filter_end_date}\\\",filter: \\\"${this.state.filter}\\\", jobName: \\\"${this.state.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else if (this.state.filter_end_date !== \"\" ){\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset},  startTime: \\\"${this.state.filter_start_date}\\\", endTime: \\\"${this.state.filter_end_date}\\\")\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else if (this.state.filter !== \"\" && this.state.job_name !== \"\") {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset}, filter: \\\"${this.state.filter}\\\", jobName: \\\"${this.state.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else if (this.state.filter === \"\" && this.state.job_name !== \"\" ) {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset} ,filter: \"IN\", jobName: \\\"${this.state.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset}){ job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      }\n    }\n\n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    const response = await fetchCall(GRAPHQL_URL,query)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      this.setState(prevState => ({\n        loader: false\n      }))\n      const {data} = await response.json();\n      return data;  \n    } \n  }\n\n  setJobName(value) {\n  this.setState(prevState => ({\n    job_name: value\n  }))\n  }\n\n  setFilterName(value) {\n    this.setState(prevState => ({\n      filter: value\n    }))\n    }\n\n  setFilterStartDate(value) {\n   this.setState(prevState => ({\n    filter_start_date: value\n   }))\n  }\n\n  setFilterEndDate(value) {\n   this.setState(prevState => ({\n    filter_end_date: value\n   }))\n  } \n\n  componentDidMount() {\n    this.setJobRuns()\n  }\n\n  componentWillUnmount() {\n   clearInterval(this.timerID);\n  }\n\n  setJobRuns = value => {\n    const offset = value || this.state.paginationValue;\n    this.fetchEtlFlowJobs(offset).then(({jobruns}) => {\n      this.setState(prevState => ({\n        jobruns: jobruns,\n        loader: false\n      }))\n     }).catch(error => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false\n      }))})\n  }\n  \n  \n  incPaginationValue() {\n    this.setState(\n      prevState => ({ paginationValue: prevState.paginationValue + 10 })\n    )\n    this.setJobRuns(this.state.paginationValue + 10)\n  }\n\n  decPaginationValue() {\n    this.setState(\n      prevState => ({ paginationValue: prevState.paginationValue - 10 }),\n      () =>  this.setJobRuns(this.state.paginationValue)\n    )\n   \n  }\n\n  setInitialState(){\n    this.props.match.params.job_name = undefined\n    this.setState(prevState => ({  \n      job_name: '',\n      filter: '',\n      filter_start_date: '',\n      filter_end_date: '',\n      paginationValue: 0\n    }),()=> this.setJobRuns(0))\n  }\n\n  render(){\n    console.log(this.state.paginationValue)\n  if (this.state.error !== ''){\n    return (\n      <div class=\"container\">\n          <ul class = \"pagination justify-content-center\">\n            <RefreshComponent call = {this.setJobRuns}/>\n          </ul> \n            <ErrorComponent error = {this.state.error_code}/>\n      </div>\n    );\n  }\n  else if (this.state.loader){\n    return (\n      <div>\n          <LoaderComponent />\n      </div>\n    );\n  }\n  else{\n    return (\n      <div className=\"container-fluid\">\n         <JobRunsData \n           GRAPHQL_URL = {this.props.GRAPHQL_URL}\n           data = {this.state.jobruns} \n           jobs = {this.props.jobs}\n           setJobRuns= {this.setJobRuns}\n           setJobName  = {this.setJobName}\n           setFilterStartDate  = {this.setFilterStartDate}\n           setFilterEndDate  = {this.setFilterEndDate}\n           setFilterName  = {this.setFilterName}\n           incPaginationValue = {this.incPaginationValue}\n           decPaginationValue = {this.decPaginationValue}\n           setInitialState = {this.setInitialState}\n           job_name = {this.state.job_name}\n           filter = {this.state.filter}\n           filter_start_date = {this.state.filter_start_date}\n           filter_end_date = {this.state.filter_end_date}\n           paginationValue   = {this.state.paginationValue}\n         />\n      </div>);\n   }\n  }\n}\n\n// export default JobRuns; \nexport default withRouter(JobRuns)\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n  \nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport RefreshComponent from '../components/Refresh';\n\nimport $ from 'jquery';\n\nclass RunningJobsData extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { queueStats: [],\n      loader:false,\n      error:'',\n      error_code:'',\n\n    }\n  }\n\n  showModal(data)\n  {\n    var props = ''\n    var queue = JSON.parse(data)\n \n    for(var key in queue) {\n    { \n        props  += \"<b>\"+ key + \"</b>\" +\"=\" + queue[key]+ \"<br></br>\"\n    }\n\n   {$(\"#queueStats .modal-body\").html(props)}\n   $(\"#queueStats\").modal();\n  }\n  }\n\n  render(){\n    return(\n      <div class=\"container\">\n          <ul class = \"pagination justify-content-center\">\n             <RefreshComponent call = {this.props.setEtlFlowQueueStats}/>\n          </ul>\n          <table id=\"joblist\" class=\"table table-sm table-bordered\">\n            <thead class=\"thead-dark\">\n                  <tr>\n                    <th>Job Name</th>\n                    <th>Submitted From</th>\n                    <th>Execution Time</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                  <tbody>\n                  {this.props.queueStats.map( (data) => (\n                    <tr key={data.name}>\n                      <td>{data.name}</td>\n                      <td>{data.submitted_from}</td>\n                      <td>{data.execution_time}</td>\n\n                      <td>\n                          <button type=\"button\" class=\"btn btn-secondary btn-sm\" data-toggle=\"modal\" onClick = {() => this.showModal(data.details)}>\n                            Stats\n                          </button>\n                          \n                          <div class=\"modal fade\" id=\"queueStats\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                              <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                  <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                  </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n            </table>\n      </div>     \n    );      \n  }\n}\nexport default RunningJobsData;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n  \n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport LoaderComponent from '../components/Loader';\nimport ErrorComponent from '../components/Error';\nimport RefreshComponent from '../components/Refresh';\n\nimport RunningJobsData from '../cards/RunningJobs';\n\nimport { fetchCall } from '../utils/GraphQl';\n\n\nclass JobLogs extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { queueStats: [],\n      loader:false,\n      error:'',\n      error_code:0,\n      errors: [],\n    }\n  }\n\n  async fetchEtlFlowQueueStats() {\n    const token = localStorage.getItem('Authorization')\n\n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    var body = ` query { queueStats { name  details submitted_from execution_time  } }`\n    const response = await fetchCall(this.props.GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json()\n      return data;   \n    } \n  }\n\n  \n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                    \n      }))\n  }\n\n  componentDidMount() {\n    //calling getInfo api\n    this.setEtlFlowQueueStats()\n  }\n\n  setEtlFlowQueueStats = () => {\n    this.fetchEtlFlowQueueStats().then(({queueStats}) => {\n      this.setState(prevState  => ({\n        queueStats: queueStats,\n        loader: false\n      }))\n    }).catch((error) => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false,\n      }))\n  }); \n  }\n\n  showModal(data)\n  {\n    var props = ''\n    var queue = JSON.parse(data)\n \n    for(var key in queue) {\n    { \n        props  += \"<b>\"+ key + \"</b>\" +\"=\" + queue[key]+ \"<br></br>\"\n    }\n\n   {$(\"#queueStats .modal-body\").html(props)}\n   $(\"#queueStats\").modal();\n  }\n  }\n\n  render(){\n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n          <ul class = \"pagination justify-content-center\">\n            <RefreshComponent call = {this.setEtlFlowQueueStats}/>\n          </ul>\n          <ErrorComponent error={this.state.error_code}/>\n        </div>\n      );\n    } \n    else if (this.state.loader){\n      return (\n        <div>\n          <LoaderComponent job_run_id={this.job_run_id}  set_job_run_state = {this.set_job_run_state} />\n        </div>\n      );\n    }\n    else{ \n      return (\n        <div>\n          <RunningJobsData queueStats = {this.state.queueStats} setEtlFlowQueueStats = {this.setEtlFlowQueueStats} />\n       </div>\n    ); \n    }         \n  }\n}\nexport default JobLogs;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\nimport { withRouter } from 'react-router'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport LoaderComponent from '../components/Loader';\nimport ErrorComponent from '../components/Error';\nimport { fetchCall } from '../utils/GraphQl';\n\nclass JobRunDetails extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { \n      stepruns: [],\n      loader:false,\n      error:'',\n      error_code:0\n    }\n    \n  }\n\n  async fetchEtlFlowJobById(job_run_id) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n\n    this.setState(prevState => ({\n      loader: true\n    }))\n\n\n    var body =  ` query { stepruns(job_run_id: \\\"${job_run_id}\\\"){ job_run_id step_name properties state start_time elapsed_time step_type step_run_id  } }`\n    const response = await fetchCall(GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json();\n      return data;\n    }    \n  }\n\n  setInterval() {\n    this.timerID = setInterval(\n      () => this.fetchEtlFlowJobs(),\n      1000 * 1000\n    );\n  }\n \n  componentDidMount() {\n    this.setEtlFlowJobById(this.props.match.params.id)\n    // set Interval\n    this.setInterval();\n  }\n\n  setEtlFlowJobById(id) {\n    this.fetchEtlFlowJobById(id).then(({stepruns}) => {\n      this.setState(prevState => ({\n        stepruns: stepruns,\n        loader : false\n      }))\n    })\n  }\n\n  componentWillUnmount() {\n  clearInterval(this.timerID);\n  }\n \n  showModal(data)\n {\n   var props = ''\n   var data_jobruns = JSON.parse(data)\n\n   for(var key in data_jobruns) {\n   { \n       props  += \"<b>\"+ key + \"</b>\" +\"=\" + data_jobruns[key]+ \"<br></br>\"\n   }\n  {$(\"#stepRunModal .modal-body\").html(props)}\n  $(\"#stepRunModal\").modal();\n }\n  }\n\n  showStepRunStateModal(data)\n {\n  {$(\"#stepRunStateModal .modal-body\").html(data)}\n  $(\"#stepRunStateModal\").modal();\n  }\n\n  handleOnClick(job_id){    \n  this.props.history.push('/StepRunsById/' + job_id)\n  }\n\n  render(){\n   var step_run_id_flag = false\n   this.state.stepruns.map( item => {if(item.step_run_id !== \"\") step_run_id_flag = true})\n   var linked_jobs = ''\n   if(step_run_id_flag) {\n    linked_jobs = <th>Linked Job</th>\n   } else {\n    linked_jobs = \"\"\n   }\n\n   var remoteStep = [\"EtlFlowJobStep\",\"DPSparkJobStep\",\"ParallelETLStep\"];\n   if (this.state.error !== ''){\n    return (\n      <div>\n        <ErrorComponent error={this.state.error_code}/>\n      </div>\n    );\n   } else if (this.state.loader){\n    return (\n      <div>\n        <LoaderComponent job_run_id={this.job_run_id}  set_job_run_state = {this.set_job_run_state} />\n      </div>\n    );\n   }\n   else{\n   return (\n     <div className=\"container-fluid\">\n         <table id=\"job runs\" class=\"table table-sm table-bordered\">\n           <thead class=\"thead-dark\">\n                 <tr>\n                   <th>Job Run Id</th>\n                   <th>Step Type</th>\n                   <th>Step Name</th>\n                   <th>Start Time</th>\n                   <th>Elapsed Time</th>\n                   <th>Status</th>\n                   <th>Properties</th> \n                   {linked_jobs}\n                   <th>\n                        <button className=\"btn btn-secondary btn-block\" onClick = {() => {\n                          this.props.history.push('/JobRuns')\n                         }} >Back</button>\n                   </th>\n                 </tr>\n               </thead>\n                 <tbody>\n                 {this.state.stepruns.map( data => (\n                   <tr>\n                     <td>{data.job_run_id}</td>\n                     <td>{data.step_type}</td>\n                     <td>{data.step_name}</td>\n                     <td>{data.start_time}</td>\n                     <td>{data.elapsed_time}</td>\n                     <td>\n                     {(() => {\n                           if (data.state === \"pass\" || data.state == \"\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-success\">{data.state}</p>\n                               </div>\n                             )\n                           } else if (data.state === \"started\" || data.state == \"running\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-warning\">{data.state}</p>\n                               </div>\n                             )\n                           } else {\n                            return (\n                              <div>\n                                 <button type=\"button\" class=\"btn btn-danger btn btn-sm\" data-toggle=\"modal\" onClick = {() => this.showStepRunStateModal(data.state)}>\n                                     Error\n                                 </button>\n                            \n                                 <div class=\"modal fade\" id=\"stepRunStateModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                   <div class=\"modal-dialog\" role=\"document\">\n                                     <div class=\"modal-content\">\n                                       <div class=\"modal-header\">\n                                         <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                           <span aria-hidden=\"true\">&times;</span>\n                                         </button>\n                                       </div>\n                                       <div class=\"modal-body\">\n                                       </div>\n                                       <div class=\"modal-footer\">\n                                         <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                       </div>\n                                     </div>\n                                   </div>\n                                 </div>\n                              </div>\n                            )\n                           }\n                         })()}\n                     </td>\n                     <td>\n                          <button type=\"button\" class=\"btn btn-secondary btn-sm\" data-toggle=\"modal\" onClick = {() => this.showModal(data.properties)}>\n                            Properties\n                          </button>\n                          \n                          <div class=\"modal fade\" id=\"stepRunModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                              <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                  <h5 class=\"modal-title\" id=\"exampleModalLabel\">Step Properties</h5>\n                                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                  </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      </td>\n                     <td>\n                         {(() => {\n                            if (remoteStep.includes(data.step_type)) {\n                              return (\n                                <input type=\"button\" value=\"Check Progress\" class=\"btn btn-secondary btn-sm\" onClick = {() => this.setEtlFlowJobById(data.step_run_id)}/>\n                              )\n                            } else {\n                              return (\n                                <div></div>\n                              )\n                            }\n                          })()}\n                    </td>\n                   </tr>\n                 ))}\n                 </tbody>\n            </table>\n          </div>\n    );\n    }\n  }\n}\nexport default withRouter(JobRunDetails)\n","import React from 'react';\n\nimport jwt_decode from \"jwt-decode\";\nimport CurrentTime from './CurrentTime';\nimport Stats from '../pages/Stats';\nimport Credentials from '../pages/Credential';\nimport JobList from '../pages/JobList';\nimport JobRuns from '../pages/JobRuns';\nimport RunningJobs from '../pages/RunningJobs';\nimport { fetchCall } from '../utils/GraphQl';\n\nimport '../css/App.css'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport JobRunDetails from '../cards/JobRunDetails';\n\n\nclass Routes extends React.Component {\n\n  constructor(props){\n    super(props); \n    this.state  = {\n      jobs: [],\n      metrics: [],\n      user: '',\n      loader:false,\n      error:'',\n      error_code:0,\n    }\n  }\n\n  async fetchEtlFlowJobs() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    this.setState(prevState => ({\n      loader: true,\n      error:''\n    }))\n    var body =  ` query { jobs { name  schedule props {key value} nextSchedule schduleRemainingTime is_active  last_run_time last_run_description } } `\n    const response = await fetchCall(GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.doLogout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      this.setState(prevState => ({\n        loader: false\n      }))  \n      const {data} = await response.json();\n\n      return data;    \n    }\n  }\n\n  setInterval() {\n    this.timerID = setInterval(\n      () => this.get_etl_jobs(),\n      1000 * 1000\n    );\n  }\n\n  fetchEtlFlowUserDetails() {\n    const token = localStorage.getItem('Authorization')\n    var decoded = JSON.parse(JSON.stringify(jwt_decode(token)));\n    this.setState({\n      user: decoded[\"user\"]\n    })\n  }\n\n  componentDidMount() {\n\n    //calling jobs api\n    this.get_etl_jobs()\n    this.fetchEtlFlowUserDetails()\n }\n\n  get_etl_jobs = () => {\n   this.fetchEtlFlowJobs().then(({jobs}) => {\n     this.setState(prevState => ({\n       jobs: jobs,\n       loader: false\n     }))\n   }).catch(error => {\n     this.setState(prevState => ({\n       error: error,\n       loader: false\n     }))\n    });\n  }\n\n  remove_token() {\n   localStorage.removeItem(\"Authorization\")\n   this.props.doLogout(\"\")\n}\n\n  render(){\n    return (\n       <Router>\n          <nav className = \"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n              <ul className = \"nav navbar-nav w-100\">\n                <li className = \"nav-item nav-link\" ><Link to=\"/\">Jobs</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/JobRuns\">Job Runs</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/RunningJobs\">Running Jobs</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/Stats\">Stats</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/Credentials\">Credentials</Link> </li>\n              </ul>\n              <div class=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n              <ul class=\"nav justify-content-end w-100\">\n              <CurrentTime GRAPHQL_URL = {this.props.GRAPHQL_URL}/>\n                <li class=\"nav-item dropdown\">\n\t                <a class=\"nav-link  dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">{this.state.user}</a>\n\t                  <ul class=\"dropdown-menu\">\n\t\t                  <li>\n                        <a class=\"dropdown-item\" href=\"https://github.com/tharwaninitin/etlflow\">\n                           Git Hub \n                        </a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"https://tharwaninitin.github.io/etlflow/site/\">\n                          Docs\n                        </a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\">\n                          <input type=\"button\" class=\"btn btn-secondary btn-sm\" value=\"LogOut\" onClick = {() => this.remove_token()}></input>\n                        </a>\n                      </li>\n\t                  </ul>\n\t              </li>\n              </ul>\n            </div>\n          </nav>\n          <Switch>\n              <Route exact path=\"/\" component={() => (<JobList GRAPHQL_URL = {this.props.GRAPHQL_URL} jobs={this.state.jobs} logout={this.props.doLogout} get_etl_jobs = {this.get_etl_jobs} error = {this.state.error}  error_code = {this.state.error_code} loader = {this.state.loader}/>)}/>\n              <Route path=\"/JobRuns/:job_name?\" render={props => (<JobRuns GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout} jobs={this.state.jobs}/>)}/>\n              <Route path=\"/RunningJobs\" render={props => (<RunningJobs GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout}/>)}/>\n              <Route path=\"/Stats\" render={props => (<Stats GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout}/>)}/>\n              <Route path=\"/Credentials\" render={props => ( <Credentials GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout} />)}/>\n              <Route path=\"/JobRunDetails/:id\" render={props => ( <JobRunDetails GRAPHQL_URL = {this.props.GRAPHQL_URL}/>)}/>\n          </Switch>\n       </Router>\n    );\n    }\n}\nexport default Routes;\n// export default withRouter(Routes)\n\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport jwt_decode from \"jwt-decode\";\n\nimport { fetchCall } from '../utils/GraphQl';\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = {\n         user_name: '',\n         password: '',\n         token: '', \n         login: [],\n\n        }\n\n    this.login_validation = this.login_validation.bind(this);\n    this.set_login_user_name = this.set_login_user_name.bind(this);\n    this.set_login_password = this.set_login_password.bind(this);\n  }\n\n  async fetchLoginDetails(user_name,password) {\n    const GRAPHQL_URL = this.props.GRAPHQL_LOGIN_URL\n\n    var query =   ` mutation { login (user_name: \\\"${user_name}\\\", password: \\\"${password}\\\") { message token } }`\n    const response = await fetchCall(GRAPHQL_URL,query)\n    const {data} = await response.json();\n    return data;        \n  }\n\n login_validation() {\n    this.fetchLoginDetails(this.state.user_name,this.state.password).then(({login}) => {\n        var token_value = JSON.parse(JSON.stringify(login)).token\n        if(token_value !== \"\")\n        {\n            localStorage.setItem('Authorization', token_value);   \n            this.props.doLogin(token_value)\n            this.setState(prevState => ({\n                token: token_value\n              }))\n        }\n        else \n        {\n            alert(\"Invalid User\")\n        }\n    })   \n  } \n\n  set_login_user_name() {\n    this.setState(prevState => ({\n        user_name: document.getElementById(\"user_name\").value\n      }))\n  }\n\n  set_login_password() {\n    this.setState(prevState => ({\n        password: document.getElementById(\"password\").value\n      }))\n  }\n\n  render(){\n    return (\n    <div className=\"main\" align=\"center\">\n         <nav className = \"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n             <ul className = \"nav navbar-nav w-50\">\n                 <li className = \"nav-item nav-link\">EtlFlow</li>\n             </ul>\n         </nav>   \n           <div className=\"col-md-3\">\n            <div className=\"login-form \">\n                <form id=\"form_login\" className = \"text-center border border-dark p-5\" onSubmit={(e) => {this.login_validation(); e.preventDefault();}  }>\n                    <p className = \"h4 mb-4\">EtlFlow Login</p>\n                    <div className=\"form-group\">\n                        <input type=\"text\"\n                         className=\"form-control\" \n                         aria-describedby=\"UsernameHelp\"\n                         placeholder=\"Username\"\n                         id=\"user_name\"\n                         onChange={e => this.set_login_user_name()}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                         type=\"password\"\n                         className=\"form-control\"\n                         aria-describedby=\"PasswordHelp\"\n                         placeholder=\"Password\"\n                         id=\"password\"\n                         onChange={e => this.set_login_password()}></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-secondary btn-block\">Submit</button>\n                </form>   \n            </div>\n        </div>\n    </div>\n    );\n  }\n}\nexport default Login;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport Routes from './components/Routes';\nimport LoginComponent from './components/Login';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      token: '',\n    }\n\n  //  this.GRAPHQL_URL = 'https://devetlflow.startv.com/api/etlflow'\n  //  this.GRAPHQL_LOGIN_URL = 'https://devetlflow.startv.com/api/login'\n\n   this.GRAPHQL_URL = '/api/etlflow'\n   this.GRAPHQL_LOGIN_URL = 'api/login' \n   \n   this.doLogin = this.doLogin.bind(this)\n   this.doLogout = this.doLogout.bind(this)\n\n  }\n\n  doLogin(args_token,args_user) {\n    this.setState({\n      token: args_token\n    })\n  }\n\n\n  doLogout(args_token) {\n    this.setState({\n      token: ''\n    })\n  }\n\n\n  render(){\n    if(localStorage.getItem(\"Authorization\") === null){\n      return (  \n          <div>\n            <LoginComponent  GRAPHQL_LOGIN_URL = {this.GRAPHQL_LOGIN_URL} doLogin = {this.doLogin}/>  \n          </div>\n      );\n    } else {\n      return (  \n        <div>\n          <Routes  GRAPHQL_URL = {this.GRAPHQL_URL} doLogout = {this.doLogout}/>  \n        </div>\n     );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","var fetchCall = function(url,query) {\n    const token = localStorage.getItem('Authorization')\n    var response = fetch(url, {\n        method: 'POST',\n        headers: {\n          'content_type': 'applcation/json',\n          'Authorization': token,\n        },\n        body:  JSON.stringify(\n          {\n            query: query\n          }\n        )  \n      })\n\n    return response\n}\n   \nexports.fetchCall = fetchCall;"],"sourceRoot":""}