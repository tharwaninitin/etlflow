{"version":3,"sources":["components/CurrentTime.js","components/ErrorComponent.js","pages/MemoryGraph.js","pages/Metrics.js","pages/BarGraph.js","cards/Stats.js","components/LoaderComponent.js","components/NotificationComponent.js","cards/Credential.js","cards/JobList.js","cards/JobRuns.js","pages/JobLogs.js","cards/JobLogs.js","pages/JobRunDetails.js","components/Routes.js","components/Login.js","App.js","index.js","utils/GraphQl.js"],"names":["CurrentTime","props","state","currentime","a","GRAPHQL_URL","this","fetch_api_call","response","json","data","fetchEtlFlowJobs","then","setState","prevState","current_time","className","React","Component","ErrorComponent","custom_error","error","class","ws_url","URL","window","location","href","protocol","replace","MemoryGraph","used","total","free","max","error_code","ws","WebSocket","localStorage","getItem","options","low","showArea","showPoint","close_ws","close","document","getElementById","innerText","console","log","readyState","CLOSED","onopen","onmessage","evt","message","res","JSON","parse","memory","onclose","used_memory_data","series","free_memory_data","total_memory_data","used_memory_chart","Chartist","Line","free_memory_chart","total_memory_chart","updateMemoryChart","getMemoryData","call","type","push","chart","point","memType","length","shift","update","setTimeout","data-toggle","role","aria-expanded","aria-controls","id","onClick","Metrics","metrics","loader","status","logout","removeItem","ok","statusText","Error","setMetrics","fetchEtlFlowMetrics","catch","active_jobs","active_subscribers","etl_jobs","cron_jobs","build_time","BarGraph","jobLogs","filter","limit","load_bar","filterOperation","limitOperation","query","params","seriesBarDistance","axisX","offset","axisY","labelInterpolationFnc","value","scaleMinSpace","job_name_labels","job_success","job_failed","map","job_name","success","failed","Bar","labels","setJobLogs","barChart","callApi","filter_button_name","limit_button_name","aria-labelledby","setInitialState","Stats","LoaderComponent","NotificationComponent","notification_var","notification","is_error","errors","data-dismiss","aria-label","setNotification","aria-hidden","job_props","Credential","credential","jdbc_values","aws_values","jdbc_keys","aws_keys","credential_name","credential_type","insert_credential_type","name","props_updated","stringify","replaceAll","update_credentials","setJobErrorDeails","add_credentials","el","i","placeholder","disabled","onChange","setInsertValues","bind","setValues","event","target","setCredentials","fetchEtlFlowCreds","final_props","updateCreds","cred_name","insertCreds","setAddCredInitialState","filter_insert_button_name","job_run_id","set_job_run_state","data-target","tabindex","createAddCredUI","addCredentials","valid_from","createUpdateCredUI","updateCredentials","JobList","jobs","run_job_props","is_active","values","keys","body","run_job","dt","$","DataTable","column","visible","job_properties","key","html","modal","history","setRunJobKeys","setRunJobValues","removeProps","splice","runEtlJob","setJobDeails","get_etl_jobs","aria-describedby","defaultChecked","e","updateJobActiveState","update_job_state","handleOnClick","schedule","nextSchedule","data-order","schduleRemainingTime","last_run_time","last_run_description","showModal","createUI","addProps","submitRunJob","withRouter","JobRuns","jobruns","retry_job_name","filter_start_date","filter_end_date","paginationValue","undefined","match","timerID","setInterval","setJobruns","clearInterval","data_jobruns","default_props","includes","job_id","button","filter_button_job_name","filter_back_button","aria-haspopup","list","setJobName","setFilterStartDate","setFilterEndDate","job_type","start_time","elapsed_time","showJobRunStateModal","properties","retryJobRun","JobLogsData","queueStats","queue","setEtlFlowQueueStats","submitted_from","execution_time","details","JobLogs","fetchEtlFlowQueueStats","JobRunDetails","stepruns","setEtlFlowJobById","fetchEtlFlowJobById","step_run_id_flag","item","step_run_id","linked_jobs","remoteStep","step_type","step_name","showStepRunStateModal","Routes","user","doLogout","token","decoded","jwt_decode","fetchEtlFlowUserDetails","to","remove_token","exact","path","component","render","Login","user_name","password","login","login_validation","set_login_user_name","set_login_password","GRAPHQL_LOGIN_URL","fetchLoginDetails","token_value","setItem","doLogin","alert","align","onSubmit","preventDefault","App","args_token","args_user","ReactDOM","StrictMode","exports","url","fetch","method","headers"],"mappings":"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","file":"static/js/main.aba002bb.chunk.js","sourcesContent":["import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport { fetch_api_call } from '../utils/GraphQl';\n\nclass CurrentTime extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { currentime: '' }    \n  }\n\n  async fetchEtlFlowJobs() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    \n    var query =  ` query {  currentime {  current_time  } } `\n    const response = await fetch_api_call(GRAPHQL_URL,query)\n\n    const {data} = await response.json();\n    return data;    \n  }\n\n\n  componentDidMount() {\n    this.fetchEtlFlowJobs().then(({currentime}) => {\n      this.setState(prevState => ({\n        currentime: currentime.current_time\n      }))\n    })\n }\n  \n render(){\n    return (\n         <li className =\"nav-item\">\n             <a className = \"nav-link disabled\">\n                {this.state.currentime} \n             </a>\n         </li>\n    );\n  }\n}\nexport default CurrentTime;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\n\nclass ErrorComponent extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  render(){  \n\n    var custom_error = ''\n\n    if(this.props.error === 0) {\n      custom_error = \"ERR_CONNECTION_REFUSED.Server is down\"\n    } else if(this.props.error === 403) { \n      custom_error = \"ERR_ABORTED 403 (Forbidden)\"\n    } else {\n      custom_error = this.props.error\n    }\n\n    return (\n        <div>\n          <table className = \"table table-striped\">\n              <thead class=\"thead-dark\">\n                 <tr>\n                   <th>Error</th>\n                 </tr>\n              </thead> \n              <tbody>\n                  <tr>\n                      <td class=\"text-danger\">{custom_error} </td>\n                  </tr>   \n              </tbody>  \n          </table>\n        </div>\n    );\n  }\n}\nexport default ErrorComponent;\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport Chartist from 'chartist/dist/chartist.min.js';\nimport ErrorComponent from '../components/ErrorComponent';\n\nvar ws_url = new URL(\"/ws/etlflow\" , window.location.href)\nws_url.protocol = ws_url.protocol.replace(\"http\",\"ws\")\n\n// var ws = new WebSocket('wss://devetlflow.startv.com/ws/etlflow/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoibWludF9hZG1pbiIsICJyb2xlIjoiYWRtaW4ifQ.gwiUv0vss-3gX5rkPOGTdJ_81n5N3W7Hv1yeGsJj5g8')\n\n// new WebSocket('wss://devetlflow.startv.com/ws/etlflow/eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoibWludF9hZG1pbiIsICJyb2xlIjoiYWRtaW4ifQ.gwiUv0vss-3gX5rkPOGTdJ_81n5N3W7Hv1yeGsJj5g8')\n// new WebSocket(ws_url + \"/\" + localStorage.getItem('Authorization'))\n \nclass MemoryGraph extends React.Component {\n  constructor(props){\n    super(props);\n    const GRAPHQL_URL = '/ws/etlflow'\n \n    this.state  = {\n      used: '',\n      total: '',\n      free: '',\n      max: '',\n      error:'',\n      error_code:0,\n    }\n    this.ws = new WebSocket(ws_url + \"/\" + localStorage.getItem('Authorization'))\n \n    this.options =  {\n      low: 0,\n      showArea: true,\n      showPoint: false\n    };\n  }\n \n  call(close_ws){\n \n    if(close_ws === \"true\"){\n      this.ws.close(1000,\"User closed the connection\")\n      document.getElementById(\"statslinknotify\").innerText = \"Real-Time Stats (Offline)\"\n      console.log('ws closed')\n    }\n    else{\n      document.getElementById(\"statslinknotify\").innerText = \"Real-Time Stats (Online)\" \n      if (this.ws.readyState === WebSocket.CLOSED) {\n        this.ws = new WebSocket(ws_url + \"/\" + localStorage.getItem('Authorization'))\n      }\n      this.ws.onopen = () => {\n      console.log('ws connected')\n      }  \n  \n      this.ws.onmessage = evt => {\n      const message = evt.data\n      const obj = JSON.parse(message);\n      var res = obj.memory;\n      this.setState(prevState => ({\n        used: res.used,\n        total: res.total,\n        free: res.free,\n        max: res.max\n      }))\n      } \n  \n      this.ws.onclose = () => {\n        console.log('disconnected')\n      }\n \n      var used_memory_data = {\n       series: [[]]\n        };\n   \n      var free_memory_data = {\n        series: [[]]\n      };\n      \n      var total_memory_data = {\n        series: [[]]\n      };\n  \n      var used_memory_chart = new Chartist.Line('.ct-chart', used_memory_data, this.options);\n      var free_memory_chart = new Chartist.Line('.cpu-chart', free_memory_data, this.options);\n      var total_memory_chart = new Chartist.Line('.cpu-chart-1', total_memory_data, this.options);\n \n      \n      this.updateMemoryChart(used_memory_chart, used_memory_data, this.getMemoryData('usedMemory'),'usedMemory' , 30)\n      this.updateMemoryChart(free_memory_chart, free_memory_data, this.getMemoryData('freeMemory'), 'freeMemory' ,30)\n      this.updateMemoryChart(total_memory_chart, total_memory_data, this.getMemoryData('totalMemory'), 'totalMemory',30)\n    }\n  }\n\n  componentDidMount() {\n    this.call()\n  }\n \n  componentWillUnmount() {\n    this.ws.close()\n  }\n\n  getMemoryData(type) {\n    var used = [];\n    var free = [];\n    var total = [];\n\n    if(type === 'usedMemory') {\n      used.push(this.state.used)\n      return used[0];\n    }\n    else if (type === 'freeMemory') {\n      free.push(this.state.free)\n      return free[0];\n    }\n    else {\n      total.push(this.state.total)\n      return total[0];\n    }\n  }\n\n  updateMemoryChart(chart,data,point,memType,length) {\n    if(data.series[0].length >= length) {\n      data.series[0].shift();\n    }\n    data.series[0].push(point);\n    chart.update(data);\n    setTimeout(() => { this.updateMemoryChart(chart,data,this.getMemoryData(memType),memType,length) }, 1000);\n  }\n\n   render(){ \n    if (this.state.error !== ''){\n      return (\n        <div>\n          <ErrorComponent error={this.state.error}/>\n        </div>\n      );\n     } else {\n      return (\n      <div class=\"card\">\n      <div class=\"card-header\">\n        <a className = \"btn btn-secondary btn-sm\" data-toggle = \"collapse\"  href = \"#streamnotify\" role = \"button\" \n          aria-expanded = \"true\" aria-controls = \"streamnotify\" id = \"statslinknotify\">\n        </a>\n        <ul class = \"pagination float-right\">\n              <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n                    this.call(\"false\")\n                }} >\n                Connect\n              </button>\n              <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n                  this.call(\"true\")\n                }} >\n                Close\n              </button>\n        </ul>      \n      </div>\n    <div className = \"collapse\" id = \"streamnotify\">\n    <div class= \"card-body\">\n    <div class = \"row\">\n      <div class=\"col-sm-3\">\n          <div class=\"card\">\n              <div class=\"card-header\">Used Memory</div>\n              <div class= \"card-body\">\n                  <div class=\"ct-chart\"></div>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-3\">\n          <div class=\"card\">\n              <div class=\"card-header\">Free Memory</div>\n              <div class= \"card-body\">\n                  <div class=\"cpu-chart\"></div>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-3\">\n          <div class=\"card\">\n              <div class=\"card-header\">Total Memory</div>\n              <div class= \"card-body\">\n                  <div class=\"cpu-chart-1 \"></div>\n              </div>\n          </div>\n      </div>\n      <div class=\"col-sm-3\">\n        <div class=\"card\">\n           <div class=\"card-header\">Current Usage</div>\n              <div class= \"card-body\">\n                <div>\n                   <ul class=\"list-group \">\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Used Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.used}</span>\n                       </li>\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Free Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.free}</span>\n                       </li>\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Total Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.total}</span>\n                       </li>\n                       <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                         <b>Max Memory</b>\n                         <span class=\"badge badge-secondary badge-pill\">{this.state.max}</span>\n                       </li>\n                   </ul>\n                </div> \n              </div>\n      </div>\n      </div>\n    </div>\n    <br/>\n    </div>\n    </div>\n    </div>\n  );}\n  }       \n}\n \nexport default MemoryGraph;\n \n\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport ChartistGraph from 'react-chartist';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport ErrorComponent from '../components/ErrorComponent';\nimport { fetch_api_call } from '../utils/GraphQl';\n\n\nclass Metrics extends React.Component {\n  constructor(props){\n    super(props);\n \n    this.state  = {\n      metrics: [],\n      error:'',\n      error_code:0,\n    }\n  }\n \n  async fetchEtlFlowMetrics() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n \n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n    \n    var body = ` query { metrics { active_jobs  active_subscribers etl_jobs cron_jobs  build_time } }`\n    \n    const response = await fetch_api_call(GRAPHQL_URL,body)  \n \n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json();\n      return data; \n    }  \n  }\n \n  componentDidMount() {\n    this.setMetrics()\n  }\n \n  setMetrics(){\n    this.fetchEtlFlowMetrics().then(({metrics}) => {\n      this.setState(prevState => ({\n          metrics: metrics\n      }))\n    }).catch(error => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false\n      }))\n  });  \n  }\n \n  render(){\n \n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n         <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.setMetrics()\n                }}>\n               Refresh\n             </button>\n         </ul>\n            <ErrorComponent error={this.state.error_code}/>\n        </div>\n      );\n     } else {\n      return (\n      <div class=\"card\">\n      <div class=\"card-header\">\n        <a className = \"btn btn-secondary btn-sm\" data-toggle = \"collapse\"  href = \"#streamnotify2\" role = \"button\" \n           aria-expanded = \"true\" aria-controls = \"streamnotify\" id = \"statslinknotify\">Metrics\n        </a>\n        <ul class = \"pagination float-right\">\n          <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n              this.setMetrics()\n          }} >\n          Refresh\n          </button>\n        </ul>      \n      </div>\n      <div className = \"collapse\" id = \"streamnotify2\">\n      <div class= \"card-body\">\n      <ul class=\"list-group \">\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <b>Active Jobs</b>\n              <span class=\"badge badge-secondary badge-pill\">{this.state.metrics.active_jobs}</span>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <b>Active Subscribers</b>\n              <span class=\"badge badge-secondary badge-pill\">{this.state.metrics.active_subscribers}</span>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <b>Etl Jobs</b>\n              <span class=\"badge badge-secondary badge-pill\">{this.state.metrics.etl_jobs}</span>\n            </li>\n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <b>Cron Jobs</b>\n              <span class=\"badge badge-secondary badge-pill\">{this.state.metrics.cron_jobs}</span>\n            </li> \n            <li class=\"list-group-item d-flex justify-content-between align-items-center\">\n                <b>Build Time</b>\n              <span class=\"badge badge-secondary badge-pill\">{this.state.metrics.build_time}</span>\n            </li>  \n         </ul>\n      </div>\n      </div>\n  </div>\n  );}\n  }       \n}\n \nexport default Metrics;\n \n\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport ChartistGraph from 'react-chartist';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport Chartist from 'chartist/dist/chartist.min.js';\nimport ErrorComponent from '../components/ErrorComponent';\nimport { fetch_api_call } from '../utils/GraphQl';\n\nclass BarGraph extends React.Component {\n  constructor(props){\n    super(props);\n    const GRAPHQL_URL = '/ws/etlflow'\n \n    this.state  = {\n      jobLogs:[],\n      filter: '',\n      limit: '',\n      error:'',\n      error_code:0,\n      load_bar:false\n    }\n \n    this.filterOperation = ['2','5','10']\n    this.limitOperation = ['2','5','10','30','50']\n \n    this.options = {\n      low: 0,\n      showArea: true,\n      showPoint: false\n    };\n  }\n \n  async callApi() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n \n    var query =  ` query { jobLogs { job_name success failed }}`\n   \n    if(this.state.filter !== '' && this.state.limit !== '') {\n      query =  ` query { jobLogs(limit: ${this.state.limit}, filter: ${this.state.filter}  ) { job_name success failed }}`\n    } else  if (this.state.filter !== '') {\n      query =  ` query { jobLogs(filter: ${this.state.filter}) { job_name success failed }}`\n    } else  if (this.state.limit !== '') {\n      query =  ` query { jobLogs(limit: ${this.state.limit}) { job_name success failed }}`\n    }\n \n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    const response = await fetch_api_call(GRAPHQL_URL,query)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {   \n      const {data} = await response.json()\n      return data;   \n    }\n  }\n\n  setErrorState(error,error_code) {\n    this.setState(prevState => ({\n      error: error,\n      error_code: error_code\n    }))\n  }\n\n  barChart(){\n    var params = {\n      seriesBarDistance: 10,\n      axisX: {\n        offset: 60\n      },\n      axisY: {\n        offset: 80,\n        labelInterpolationFnc: function(value) {\n          return value\n        },\n        scaleMinSpace: 15\n      }\n    }\n\n    if(this.state.load_bar){\n      var job_name_labels = []\n      var job_success = []\n      var job_failed = []\n  \n      this.state.jobLogs.map( (data) => {\n       job_name_labels.push(data.job_name)\n       job_success.push(data.success)\n       job_failed.push(data.failed)\n      })\n  \n      new Chartist.Bar('.ct-chart-2', {\n        labels: job_name_labels,\n        series: [\n          job_success,\n          job_failed,\n        ]\n      }, params);\n    } \n    else{\n      new Chartist.Bar('.ct-chart-2', {\n        labels: [0],\n        series: [\n          [0],\n          [0],\n        ]\n      }, params);  \n  }}\n \n  componentDidMount() {\n    this.setJobLogs(false)\n    this.barChart()  \n  }\n \n\n  setInitialState(){\n    this.setState(prevState => ({ \n      filter: '',\n      limit: ''   \n    }), () => this.setJobLogs(true))\n  }\n \n  setJobLogs(load_bar){\n    this.callApi().then(({jobLogs}) => {\n      this.setState(prevState => ({\n        jobLogs: jobLogs,\n        load_bar: load_bar\n      }),() => this.barChart())\n    }).catch(error => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false\n      }))\n    });  \n  }\n\n  render(){\n\n    var filter_button_name = ''\n    var limit_button_name = ''\n \n    if (this.state.filter !== '') {\n      filter_button_name = this.state.filter\n    }else {\n      filter_button_name = \"Add Filter (In Days)\"\n    }\n \n    if (this.state.limit !== '') {\n      limit_button_name = this.state.limit\n    }else {\n      limit_button_name = \"Add limit\"\n    }\n\n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n         <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.setJobLogs(true) \n                }}>\n               Refresh\n             </button>\n         </ul>\n          <ErrorComponent error={this.state.error_code}/>\n        </div>\n      );\n     } else {\n    return (\n      <div class=\"card\">\n      <div class=\"card-header\">\n      <a className = \"btn btn-secondary btn-sm\" data-toggle = \"collapse\"  href = \"#streamnotify1\" role = \"button\" \n        aria-expanded = \"true\" aria-controls = \"streamnotify1\">Etl Jobs Vs Count (Success/Failed)\n      </a> \n        <ul class = \"pagination float-right\">\n        <div class=\"dropdown\">\n            <button type=\"button\" class=\"btn btn-light dropdown-toggle\" data-toggle=\"dropdown\">\n              {filter_button_name}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              { this.filterOperation.map ( filter => (\n                <a class=\"dropdown-item\">\n                   <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                   this.setState(prevState => ({\n                       filter: filter\n                 }))}}> {filter} </button>\n                </a>\n              ))}\n            </div>\n          </div>\n          <div class=\"dropdown\">\n            <button type=\"button\" class=\"btn btn-light dropdown-toggle\" data-toggle=\"dropdown\">\n            {limit_button_name}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              { this.limitOperation.map ( limit => (\n                <a class=\"dropdown-item\">\n                   <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                   this.setState(prevState => ({\n                       limit: limit\n                 }))}}> {limit} </button>\n                </a>\n              ))}\n            </div>\n          </div>\n          <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n                this.setInitialState()\n          }}>Clear</button>\n          <button class= \"btn btn btn-sm ml-2\" type=\"button \" onClick = {() => {\n              this.setJobLogs(true)\n          }} >\n          Refresh\n          </button>\n        </ul>      \n        </div>\n        <div className = \"collapse\" id = \"streamnotify1\">\n        <div class= \"card-body\">\n            <div class=\"ct-chart-2\"></div>\n        </div>\n        </div>\n  </div>\n  );}\n  }       \n}\n \nexport default BarGraph;\n \n\n","\nimport React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\n \n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n \nimport 'chartist/dist/chartist.min.css';\nimport 'chartist/dist/chartist.js';\nimport ErrorComponent from '../components/ErrorComponent';\nimport MemoryGraph from '../pages/MemoryGraph';\nimport Metrics from '../pages/Metrics';\nimport BarGraph from '../pages/BarGraph';\n\nclass Stats extends React.Component {\n  constructor(props){\n    super(props);\n    this.state  = { \n        error:'',\n        error_code:'',\n      }\n  }\n\n  render(){\n\n    if (this.state.error !== ''){\n      return (\n        <div>\n          <ErrorComponent error={this.state.error}/>\n        </div>\n      );\n     } else {\n    return (\n      <div class = \"container-fluid\">\n                <MemoryGraph GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.logout}  />    \n         <br/>\n        <div class = \"row\">\n            <div class=\"col-sm-9\">\n                <BarGraph GRAPHQL_URL = {this.props.GRAPHQL_URL}  logout={this.props.logout} />   \n            </div>\n            <div class=\"col-sm-3\">\n                <Metrics  GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.logout}  />  \n            </div>    \n        </div>\n      </div>\n  );}\n  }       \n}\n \nexport default Stats;\n \n\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\n\nclass LoaderComponent extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  render(){\n    return (\n        <div class=\"d-flex justify-content-center\">\n           <div class=\"spinner-border m-5\" role=\"status\">\n             <span class=\"sr-only\">Loading...</span>\n           </div>\n        </div>\n    );\n  }\n}\nexport default LoaderComponent;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\n\nclass NotificationComponent extends React.Component {\n  constructor(props){\n    super(props); \n  }\n\n  render(){  \n\n    var notification_var = \"\"\n    if(this.props.notification){\n      if(this.props.is_error) {\n         notification_var =\n         <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n            <h4 class=\"alert-heading\">{this.props.message}</h4>\n            <p>{this.props.errors}</p>\n            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick = {() => {this.props.setNotification(false)}}>\n               <span aria-hidden=\"true\">&times;</span>\n            </button>\n         </div>\n       } else {\n          notification_var =\n          <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n             <h4 class=\"alert-heading\">{this.props.message}</h4>\n             <p>{this.props.job_props}</p>\n             <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\" onClick = {() => {this.props.setNotification(false)}}>\n                <span aria-hidden=\"true\">&times;</span>\n             </button>\n          </div>\n        }  \n    }\n\n    return (\n        <div>\n          {notification_var}\n        </div>\n    );\n  }\n}\nexport default NotificationComponent;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport LoaderComponent from '../components/LoaderComponent';\nimport ErrorComponent from '../components/ErrorComponent';\nimport Notification from '../components/NotificationComponent';\nimport { fetch_api_call } from '../utils/GraphQl';\n\nclass Credential extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { credential: [],\n      loader:false,\n      jdbc_values: [],\n      aws_values: [],\n      jdbc_keys: [\"url\",\"user\",\"passsword\",\"driver\"],\n      aws_keys: [\"access_key\",\"secret_key\"],\n      errors: '',\n      is_error: false,\n      credential_name:'',\n      credential_type:'',\n      insert_credential_type: '',\n      error:'',\n      error_code:0,\n\n    }\n    this.filterOperation = [\"JDBC\",\"AWS\"]\n\n  }\n  \n  async fetchEtlFlowCreds() {\n    \n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    var body = ` query { credential { name  type  valid_from } } `\n    const response = await fetch_api_call(this.props.GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json();\n      return data;   \n  }\n}\n\n  async updateCreds(name,type,value) {\n    var props_updated = JSON.stringify(value).replaceAll(\"\\\"?\",\"\").replaceAll(\"?\\\"\",\"\")\n\n    var query = ` mutation { update_credentials (name:\\\"${name}\\\", type:JDBC, value: ${props_updated}) { name } }`\n    if(type === \"aws\") {\n      query = ` mutation { update_credentials (name:\\\"${name}\\\", type:AWS, value: ${props_updated}) { name } }`\n    }\n\n\n    const response = await fetch_api_call(this.props.GRAPHQL_URL,query)\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data,errors} = await response.json();\n\n      if(JSON.parse(JSON.stringify(data.update_credentials)) !== null){\n        this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,JSON.parse(JSON.stringify(errors)))\n      }\n  \n      return data;    \n    }   \n  }\n\n  async insertCreds(name,type,value) {\n    \n    var props_updated = JSON.stringify(value).replaceAll(\"\\\"?\",\"\").replaceAll(\"?\\\"\",\"\")\n    var query = ` mutation { add_credentials (name:\\\"${name}\\\", type:JDBC, value: ${props_updated}) { name } }`\n    if(type === \"AWS\") {\n      query = ` mutation { add_credentials (name:\\\"${name}\\\", type:AWS, value: ${props_updated}) { name } }`\n    }\n\n    const response = await fetch_api_call(this.props.GRAPHQL_URL,query)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data,errors} = await response.json();\n      if(JSON.parse(JSON.stringify(data.add_credentials)) !== null){\n        this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,errors[0].message)\n      }\n  \n      return data;    \n    } \n    \n  }\n\n  setUpdateCredInitialState(){\n    this.setState(prevState => ({  \n      aws_values: [],\n      jdbc_values: []\n    }))\n  }\n\n  setNotification = state => {\n    this.setState(prevState => ({\n      notification: state\n    }))\n  }\n\n  createUpdateCredUI(){\n    if(this.state.credential_type === \"jdbc\"){\n    return this.state.jdbc_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.jdbc_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"***********\" onChange={this.setInsertValues.bind(this, i)} />\n            </div>    \n          </div> \n        </div> \n        </div>            \n    )\n    }else if(this.state.credential_type === \"aws\"){\n      return this.state.aws_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.aws_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"***********\" onChange={this.setInsertValues.bind(this, i)} />\n            </div>\n          </div> \n        </div> \n        </div>            \n    )\n    }\n  }\n\n  createAddCredUI(){\n    if(this.state.insert_credential_type === \"JDBC\"){\n    return this.state.jdbc_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.jdbc_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"Type Value\" onChange={this.setValues.bind(this, i)} />\n            </div>\n          </div> \n        </div> \n        </div>            \n    )\n    }else if(this.state.insert_credential_type === \"AWS\"){\n      return this.state.aws_keys.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" type=\"text\" placeholder={this.state.aws_keys[i]} disabled/>\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\"  type=\"text\"  placeholder=\"Type Value\" onChange={this.setValues.bind(this, i)} />\n            </div>\n          </div> \n        </div> \n        </div>            \n    )\n    }\n  }\n\n  setAddCredInitialState(){\n  this.setState(prevState => ({  \n    insert_credential_type: '',\n    aws_values: [],\n    jdbc_values: []\n  }))\n  document.getElementById(\"cred_name\").value = ''\n  }\n\n  setValues(i, event) {\n\n  if(this.state.insert_credential_type === \"JDBC\") {\n    let jdbc_values = [...this.state.jdbc_values];\n    jdbc_values[i] =  event.target.value;\n    this.setState({ jdbc_values });\n   } else{ \n    let aws_values = [...this.state.aws_values];\n    aws_values[i] =  event.target.value;\n    this.setState({ aws_values });\n   }\n  }\n \n  setInsertValues(i, event) {\n\n  if(this.state.credential_type === \"jdbc\") {\n    let jdbc_values = [...this.state.jdbc_values];\n    jdbc_values[i] =  event.target.value;\n    this.setState({ jdbc_values });\n   } else{ \n    let aws_values = [...this.state.aws_values];\n    aws_values[i] =  event.target.value;\n    this.setState({ aws_values });\n   }\n  }\n \n  componentDidMount() {\n    //calling getInfo api\n    this.setCredentials()\n  }\n\n  setCredentials(){\n    this.fetchEtlFlowCreds().then(({credential}) => {\n      this.setState(prevState => ({\n        credential: credential,\n        loader: false\n      }))\n    }).catch(error => {\n        this.setState(prevState => ({\n          error: error,\n          loader: false\n        }))\n    });\n  }\n\n  setCredUpdateDeails(name){\n    this.setState(prevState => ({\n      credential_name: name\n      }))\n  } \n\n  updateCredentials() {\n\n    var final_props = []\n    var i;\n\n    if(this.state.credential_type === \"jdbc\") {\n      for (i = 0; i < this.state.jdbc_keys.length; i++) {\n        var props = {[\"?key?\"] : this.state.jdbc_keys[i],[\"?value?\"] : this.state.jdbc_values[i]}\n       final_props[i] =  props\n       }\n     } else{ \n       for (i = 0; i < this.state.aws_keys.length; i++) {\n         var props = {[\"?key?\"] : this.state.aws_keys[i],[\"?value?\"] : this.state.aws_values[i]}\n        final_props[i] =  props\n        }\n     }\n \n   var props = ''\n \n   this.updateCreds(this.state.credential_name,this.state.credential_type,final_props).then(({update_credentials}) => {\n     this.setNotification(true)\n     var data =  JSON.parse(JSON.stringify(update_credentials))\n   }).catch(error => {\n    this.setState(prevState => ({\n      error: error,\n      loader: false\n    }))\n});\n\n   this.setState(prevState => ({  \n    credential_type: '',\n    aws_values: [],\n    jdbc_values: []\n  }))\n  }\n\n  async addCredentials() {\n\n    var final_props = []\n    var i;\n\n    if(this.state.insert_credential_type === \"JDBC\") {\n     for (i = 0; i < this.state.jdbc_keys.length; i++) {\n       var props = {[\"?key?\"] : this.state.jdbc_keys[i],[\"?value?\"] : this.state.jdbc_values[i]}\n      final_props[i] =  props\n      }\n    } else{ \n      for (i = 0; i < this.state.aws_keys.length; i++) {\n        var props = {[\"?key?\"] : this.state.aws_keys[i],[\"?value?\"] : this.state.aws_values[i]}\n       final_props[i] =  props\n       }\n    }\n \n   var props = ''\n \n   var cred_name = document.getElementById(\"cred_name\").value\n\n   this.insertCreds(cred_name,this.state.insert_credential_type,final_props).then(({add_credentials}) => {\n     this.setNotification(true)\n     var data =  JSON.parse(JSON.stringify(add_credentials))\n   }, () => this.setAddCredInitialState())\n\n   this.setState(prevState => ({  \n    insert_credential_type: '',\n    aws_values: [],\n    jdbc_values: []\n  }))\n  document.getElementById(\"cred_name\").value = ''\n  }\n\n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                   \n      }))\n  }\n\n  render(){\n\n    var filter_button_name = ''\n    if (this.state.credential_type !== '') {\n      filter_button_name = this.state.credential_type  \n    }else {\n      filter_button_name = \"Add Credential Type\"\n    } \n\n    var filter_insert_button_name = ''\n    if (this.state.insert_credential_type !== '') {\n      filter_insert_button_name = this.state.insert_credential_type  \n    }else {\n      filter_insert_button_name = \"Add Credential Type\"\n    } \n\n    var filter_update_button_name = ''\n    if (this.state.credential_type !== '') {\n      filter_update_button_name = this.state.credential_type  \n    }else {\n      filter_update_button_name = \"Add Credential Type\"\n    } \n\n    var message = \"\"\n    var job_props = ''\n    var errors = ''\n\n    if(this.state.notification){\n      if(this.state.is_error) {\n         message = 'Error while Updatating Credential ! '\n         job_props = ''\n         errors = this.state.errors\n       } else {\n          message = 'Credentials  submitted successfully! '\n          job_props = ''\n          errors = ''\n        }  \n    }\n\n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n         <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.setCredentials()\n                }}>\n               Refresh\n             </button>\n         </ul>\n           <ErrorComponent error={this.state.error_code}/>\n        </div>\n      );\n    } \n    else if (this.state.loader){\n      return (\n        <div>\n          <LoaderComponent job_run_id={this.job_run_id}  set_job_run_state = {this.set_job_run_state} />\n        </div>\n      );\n    }\n    else{\n      return (\n        <div className=\"container\">\n        <div><Notification notification={this.state.notification} is_error={this.state.is_error}  errors = {errors}  message={message} job_props = {job_props} setNotification={this.setNotification}/></div>\n          <ul class = \"pagination justify-content-center\">\n            <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                   this.setCredentials()\n                }} >\n               Refresh\n            </button>\n            <div class=\"inner\"> \n               <button type=\"button\" class=\"btn btn-warning ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal1\">\n                   Add New Credentials\n               </button>\n               <div class=\"modal fade\" id=\"exampleModal1\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel1\" aria-hidden=\"true\">\n                  <div class=\"modal-dialog\" role=\"document\">\n                    <div class=\"modal-content\">\n                      <div class=\"modal-header\">\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel1\">Add Credentials</h5>\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </div>\n                      <div class=\"modal-body\">\n                        <div class=\"row\">\n                          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                            <div class=\"form-group\">\n                               Credential Name\n                               <input class=\"form-control\" placeholder=\"Add Name\"  type=\"text\" id=\"cred_name\"/>\n                            </div>\n                          </div> \n                          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                            <div class=\"form-group\">\n                            <div class=\"dropdown\">\n                              <button type=\"button\" class=\"btn btn-light dropdown-toggle\" data-toggle=\"dropdown\">\n                                {filter_insert_button_name}\n                              </button>\n                              <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                                { this.filterOperation.map ( filter => (\n                                  <a class=\"dropdown-item\">\n                                     <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                                     this.setState(prevState => ({\n                                      insert_credential_type: filter\n                                   }))\n                                   }}> {filter} </button>\n                                  </a>\n                                ))}\n                              </div>\n                            </div> \n                            </div>\n                          </div>  \n                        </div> \n                        {this.createAddCredUI()} \n                        <input type=\"button\" class=\"btn btn-primary ml-2\" value=\"Submit\" onClick = {() => this.addCredentials()}/>\n                      </div>\n                      <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n             </div>\n          </ul>\n          <table id=\"jobruns\" class=\"table table-sm table-bordered\">\n              <thead class=\"thead-dark\">\n                    <tr>\n                      <th>Credential Name</th>\n                      <th>Type</th>\n                      <th>Last Updated</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                    <tbody>\n                    {this.state.credential.map( data => (\n                      <tr>\n                        <td>{data.name}</td>\n                        <td>{data.type}</td>\n                        <td>{data.valid_from}</td>\n                        <td>\n                        <div class=\"inner\">\n                             <button type=\"button\" class=\"btn btn-warning ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal\"  onClick = {() => \n                                      this.setState(prevState => ({\n                                        credential_name: data.name,\n                                        credential_type: data.type\n                                  }))}>\n                                 Update\n                             </button>\n                             <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\" role=\"document\">\n                                  <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Update Credentials</h5>\n                                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                      </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                    <div class=\"row\">\n                                        <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                                          <div class=\"form-group\">\n                                             Credential Name\n                                             <input class=\"form-control\" placeholder={this.state.credential_name}  type=\"text\" disabled/>\n                                          </div>\n                                        </div> \n                                        <div class=\"col-xs-7 col-sm-7 col-md-7\">\n                                          <div class=\"form-group\">\n                                              Type\n                                             <input class=\"form-control\" placeholder={this.state.credential_type}   type=\"text\" disabled/>\n                                          </div>\n                                        </div>  \n                                      </div> \n                                      {this.createUpdateCredUI()}        \n                                      <input type=\"button\" class=\"btn btn-primary ml-2\" value=\"Submit\" onClick = {() => this.updateCredentials()}/>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                           </div>\n                        </td>\n                      </tr>\n                    ))}\n                    </tbody>\n               </table>  \n             </div>\n      );\n   }      \n  }\n}\n\nexport default Credential;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n\nimport '../css/App.css'\nimport { withRouter } from 'react-router'\nimport LoaderComponent from '../components/LoaderComponent';\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport Notification from '../components/NotificationComponent';\nimport ErrorComponent from '../components/ErrorComponent';\nimport { fetch_api_call } from '../utils/GraphQl';\n\nimport $ from 'jquery';\n\nclass JobList extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { \n      jobs: [],\n      notification: false,\n      run_job_props: '',\n      job_name: '',\n      errors: [],\n      is_error: false,\n      is_active: true,\n      values: [],keys: [],\n      error_code:0,\n\n    }\n  }\n\n  async updateJobActiveState(job_name,state) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n\n    var body = `mutation {  update_job_state (name:\\\"${job_name}\\\" ,state: ${state}){ } }`\n    const response = await fetch_api_call(GRAPHQL_URL,body)\n    \n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } else {  \n      const {data} = await response.json();\n      return data;    \n    }   \n  }\n\n  async runEtlJob(job_name,props) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    var query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\"){\n          name\n          props {key value}\n      }\n      }\n    ` \n    if(props.length > 0) {\n      var props_updated = JSON.stringify(props).replaceAll(\"\\\"$\",\"\").replaceAll(\"$\\\"\",\"\")\n      query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\" ,props: ${props_updated}){\n          name\n          props {key value}\n      }\n      }\n    ` \n    }\n    this.setState(prevState => ({\n      loader: true\n    }))\n    \n    const response = await fetch_api_call(GRAPHQL_URL,query)\n\n   if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data,errors} = await response.json();\n      if(JSON.parse(JSON.stringify(data.run_job)) !== null){\n          this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,JSON.parse(JSON.stringify(errors)))\n      }\n      return data;  \n    }\n  }\n\n  componentDidMount() {\n    var dt = $('#joblist').DataTable({\n      \"order\": [[ 6, \"desc\" ]]\n  });\n    dt.column(6).visible(false);\n    dt.column(3).visible(false);\n\n  }\n\n  showModal(data)\n  {\n    var job_properties = \"\" \n    { \n      data.map(  props =>\n        job_properties  += \"<b>\"+ props.key + \"</b>\" +\"=\" + props.value + \"<br></br>\"\n    )}\n\n   {$(\"#jobListeModal .modal-body\").html(job_properties)}\n   $(\"#jobListeModal\").modal();\n  }\n\n  setNotification = state => {\n    this.setState(prevState => ({\n      notification: state\n    }))\n  }\n\n  setJobDeails(job_name,props){\n    this.setState(prevState => ({\n      job_name: job_name,\n      run_job_props: props                    \n      }))\n  }\n\n  setErrorState(error,error_code) {\n    this.setState(prevState => ({\n      error: error,\n      error_code: error_code\n    }))\n  }\n\n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                    \n      }))\n  }\n\n  handleOnClick(job_name){    \n    this.props.history.push('/JobRuns/' + job_name)\n  }\n\n  createUI(){\n    return this.state.values.map((el, i) => \n        <div key={i}>\n        <div class=\"row\">\n          <div class=\"col-xs-4 col-sm-4 col-md-4\">\n            <div class=\"form-group\">\n               <input class=\"form-control\" value={this.state.keys[i]} type=\"text\" placeholder=\"Type Key\" onChange={this.setRunJobKeys.bind(this, i)} />\n            </div>\n          </div>  \n          <div class=\"col-xs-7 col-sm-7 col-md-7\">\n            <div class=\"form-group\">\n              <input class=\"form-control\" value={el||''} type=\"text\"  placeholder=\"Type Value\" onChange={this.setRunJobValues.bind(this, i)} />\n            </div>\n          </div> \n         <div class=\"col-xs-3\">\n             <input type='button' class=\"btn btn-danger\" value='-' onClick={this.removeProps.bind(this, i)}/>\n         </div>\n        </div> \n        </div>            \n    )\n  }\n\n\n  setRunJobValues(i, event) {\n    let values = [...this.state.values];\n    values[i] =  event.target.value;\n    this.setState({ values });\n  }\n\n  setRunJobKeys(i, event) {\n  let keys = [...this.state.keys];\n  keys[i] =  event.target.value;\n  this.setState({ keys });\n  }\n \n  addProps(){\n   this.setState(prevState => ({ values: [...prevState.values, '']}))\n  }\n \n  removeProps(i){\n\n    let values = [...this.state.values];\n    values.splice(i,1); \n    this.setState({ values });\n\n    let keys = [...this.state.keys];\n    keys.splice(i,1);\n    this.setState({ keys });\n  }\n\n  submitRunJob() {\n\n   var final_props = []\n   var i;\n   for (i = 0; i < this.state.keys.length; i++) {\n    var props = {[\"$key$\"] : this.state.keys[i],[\"$value$\"] : this.state.values[i]}\n    final_props[i] =  props\n   }\n\n  var props = ''\n\n  this.runEtlJob(this.state.job_name.replace(/^\"(.*)\"$/, '$1'),final_props).then(({run_job}) => {\n    this.setNotification(true)\n    var data =  JSON.parse(JSON.stringify(run_job))\n    if(data !== null){\n        props = JSON.stringify(data[\"props\"]) \n        var job_name = JSON.stringify(data[\"name\"]) \n        this.setJobDeails(job_name,props)\n   }})    \n  }\n\n  render(){  \n\n    var message = ''\n    var job_props = ''\n    var errors = ''\n    if(this.state.notification){\n      job_props = this.state.run_job_props\n      if(this.state.is_error) {\n          message = 'Error while submitting job!'\n          JSON.parse(JSON.stringify(this.state.errors)).map( (data) => {\n            errors = data.message\n          })\n       } else {\n          message = ' Job ' +  this.state.job_name.replace(/^\"(.*)\"$/, '$1') +  ' submitted successfully! '\n        }  \n    } \n\n    if (this.props.error !== ''){\n      return (\n        <div class=\"container\">\n         <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.props.get_etl_jobs()\n                }}>\n               Refresh\n             </button>\n         </ul>\n            <ErrorComponent error={this.props.error_code}/>\n        </div>\n      );\n     } \n     else if (this.props.loader){\n      return (\n        <div>\n          <LoaderComponent />\n        </div>\n      );\n    }\n    else{\n    return (\n          <div class=\"container-fluid\">\n          <div><Notification notification={this.state.notification} is_error={this.state.is_error}  errors = {errors}  message={message} job_props = {job_props} setNotification={this.setNotification}/></div>\n          <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                      this.props.get_etl_jobs() \n                }} >\n               Refresh\n             </button>\n         </ul>\n          <table id=\"joblist\" class=\"table table-sm table-bordered\">\n            <thead class=\"thead-dark\">\n                  <tr>\n                    <th>Active/Inactive</th>\n                    <th>Job Name</th>\n                    <th>Schedule</th>\n                    <th>Next Schedule</th>\n                    <th>Schedule Remaining Time</th>\n                    <th>Job Last Run</th>\n                    <th>Job Last Time</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                  <tbody>\n                  {this.props.jobs.map( (data) => (\n                    <tr>\n                      <td>{(() => {\n                           if (this.state.is_active && data.is_active) {\n                             return (\n                               <div className = \"checkbox\">\n                                 <input type=\"checkbox\"\n                                     aria-describedby=\"UsernameHelp\"\n                                     data-toggle = \"toggle\"\n                                     defaultChecked\n                                     onClick={e => this.updateJobActiveState(data.name,false).then(({update_job_state}) => {\n                                      this.props.get_etl_jobs()\n                                      this.setState(prevState => ({  \n                                        is_active: false\n                                      }))\n                                    })}>\n                                 </input>\n                               </div>\n                             )\n                           } else {\n                            return (\n                              <div className = \"checkbox\">\n                                <input type=\"checkbox\"\n                                     aria-describedby=\"UsernameHelp\"\n                                     data-toggle = \"toggle\"\n                                     onClick={e => this.updateJobActiveState(data.name,true).then(({update_job_state}) => {\n                                      this.props.get_etl_jobs()\n                                      this.setState(prevState => ({  \n                                        is_active: true\n                                      }))\n                                    })}>\n                                 </input>\n                              </div>\n                            )\n                           }\n                         })()}\n                      </td>\n                        <td> <button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\" onClick = {() => this.handleOnClick(data.name)}>{data.name}</button></td>\n                      <td>{data.schedule}</td>\n                      <td>{data.nextSchedule}</td>\n                      <td data-order={data.nextSchedule}>{data.schduleRemainingTime}</td>\n                      <td data-order={data.last_run_time}>\n                      {(() => {\n\n                           if (data.last_run_time === 0) {\n                             return (\n                               <div>\n                               </div>\n                             )\n                           } else {\n                             return (\n                               <div>  \n                                  {data.last_run_description}\n                               </div>\n                             )\n                           } \n                         })()}\n                      </td>\n                      <td>{data.last_run_time}</td>\n\n                      <td >\n                      <div class='row'>\n                      <div class='col-xs-12 button-wrapper' class=\"inner\">\n                          <button type=\"button\" class=\"btn btn-secondary ml-2\" data-toggle=\"modal\" onClick = {() => this.showModal(data.props)}>\n                            Properties\n                          </button>\n                          <div class=\"modal fade\" id=\"jobListeModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                              <div class=\"modal-content\">     \n                                <div class=\"modal-header\">\n                                  <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                  </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n\n                          <div class=\"inner\">\n                             <button type=\"button\" class=\"btn btn-warning ml-2\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick = {() => \n                                      this.setState(prevState => ({\n                                          job_name: data.name\n                                  }))}>\n                                 Run\n                             </button>\n                             <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                <div class=\"modal-dialog\" role=\"document\">\n                                  <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Run Job</h5>\n                                      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                        <span aria-hidden=\"true\">&times;</span>\n                                      </button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                       {this.createUI()}        \n                                      <input type='button' class=\"btn btn-primary ml-2\" value='Add Properties' onClick={this.addProps.bind(this)}/>\n                                      <input type=\"button\" class=\"btn btn-primary ml-2\" value=\"Submit\" onClick = {() => this.submitRunJob()}/>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                           </div>\n                           </div>\n                           </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n            </table>\n      </div>     \n    );}\n  }\n}\n// export default JobList;\nexport default withRouter(JobList)","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport '../css/App.css'\nimport { withRouter } from 'react-router'\nimport ErrorComponent from '../components/ErrorComponent';\nimport Notification from '../components/NotificationComponent';\n\nimport LoaderComponent from '../components/LoaderComponent';\nimport { fetch_api_call } from '../utils/GraphQl';\n\nclass JobRuns extends React.Component {\n  constructor(props){\n    super(props); \n    this.job_run_id = ''\n    this.filterOperation = [\"IN\",\"NOT IN\"]\n    this.state  = { \n      jobruns: [],\n      filter: '',\n      job_name: '',\n      retry_job_name: '',\n      filter_start_date: '',\n      filter_end_date: '',\n      paginationValue: 0,\n      loader:false,\n      errors: [],\n      is_error: false,\n      notification: false,\n      run_job_props: '',\n      error:'',\n      error_code:0,\n\n    }\n\n  }\n\n  async fetchEtlFlowJobs() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    const token = localStorage.getItem('Authorization')\n\n    const limit = 10;\n    const offset = this.state.paginationValue;\n\n    var query = ` query { jobruns(limit: ${limit} , offset: ${offset}){ job_run_id job_name properties state start_time elapsed_time job_type is_master}}`\n    \n    if(this.props.match.params.job_name !== undefined){\n      query = ` query { jobruns(limit: ${limit} , offset: ${offset} ,filter: \"IN\", jobName: \\\"${this.props.match.params.job_name}\\\"  )\n              { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n\n      if (this.state.filter_end_date !== \"\") {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset},  startTime: \\\"${this.state.filter_start_date}\\\", endTime: \\\"${this.state.filter_end_date}\\\",filter: \"IN\", jobName: \\\"${this.props.match.params.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } \n\n      this.setState(prevState => ({\n        filter: 'IN',\n        job_name: this.props.match.params.job_name\n      }))\n\n    } else {\n      if (this.state.filter_end_date !== \"\" && this.state.filter !== \"\" ) {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset},  startTime: \\\"${this.state.filter_start_date}\\\", endTime: \\\"${this.state.filter_end_date}\\\",filter: \\\"${this.state.filter}\\\", jobName: \\\"${this.state.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else if (this.state.filter_end_date !== \"\" ){\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset},  startTime: \\\"${this.state.filter_start_date}\\\", endTime: \\\"${this.state.filter_end_date}\\\")\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else if (this.state.filter !== \"\" && this.state.job_name !== \"\") {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset}, filter: \\\"${this.state.filter}\\\", jobName: \\\"${this.state.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else if (this.state.filter === \"\" && this.state.job_name !== \"\" ) {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset} ,filter: \"IN\", jobName: \\\"${this.state.job_name}\\\"  )\n        { job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      } else {\n        query = ` query { jobruns(limit: ${limit} , offset: ${offset}){ job_run_id job_name  properties state start_time elapsed_time job_type is_master}}`\n      }\n    }\n\n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    const response = await fetch_api_call(GRAPHQL_URL,query)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      this.setState(prevState => ({\n        loader: false\n      }))\n      const {data} = await response.json();\n      return data;  \n    } \n  }\n\n  async runEtlJob(job_name,props) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    const token = localStorage.getItem('Authorization')\n\n    var query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\"){\n          name\n          props {key value}\n      }\n      }\n    ` \n    if(props.length > 0) {\n      var props_updated = [JSON.stringify(props).replaceAll(\"\\\"$\",\"\").replaceAll(\"$\\\"\",\"\")]   \n      query =  `\n      mutation {\n        run_job (name:\\\"${job_name}\\\" ,props: ${props_updated}){\n          name\n          props {key value}\n      }\n      }\n    ` \n    }\n    this.setState(prevState => ({\n      loader: true\n    }))\n\n    const response = await fetch_api_call(GRAPHQL_URL,query)\n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      this.setState(prevState => ({\n        loader: false\n      }))\n      const {data,errors} = await response.json();\n      if(JSON.parse(JSON.stringify(data.run_job)) !== null){\n        this.setJobErrorDeails(false)\n      }\n      else {\n        this.setJobErrorDeails(true,JSON.parse(JSON.stringify(errors)))\n      }\n      return data;  \n    }  \n  }\n\n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                    \n      }))\n  }\n\n  setInterval() {\n    this.timerID = setInterval(\n      () => this.fetchEtlFlowJobs(),\n      1000 * 1000\n    );\n  }\n \n  componentDidMount() {\n    this.setJobruns()\n  }\n\n  componentWillUnmount() {\n  clearInterval(this.timerID);\n  }\n\n  setJobruns(){\n  this.fetchEtlFlowJobs().then(({jobruns}) => {\n    this.setState(prevState => ({\n      jobruns: jobruns,\n      loader: false\n    }))\n   }).catch(error => {\n    this.setState(prevState => ({\n      error: error,\n      loader: false\n    }))})\n  }\n\n  setJobName() {\n  this.setState(prevState => ({\n    job_name: document.getElementById(\"exampleDataList\").value\n  }))\n  }\n\n  setFilterStartDate() {\n   this.setState(prevState => ({\n    filter_start_date: document.getElementById(\"start_date\").value\n   }))\n  }\n\n  setFilterEndDate() {\n   this.setState(prevState => ({\n    filter_end_date: document.getElementById(\"end_date\").value\n   }))\n  } \n\n  showModal(data)\n {\n   var props = ''\n   var data_jobruns = JSON.parse(data)\n\n   for(var key in data_jobruns) {\n   { \n       props  += \"<b>\"+ key + \"</b>\" +\"=\" + data_jobruns[key]+ \"<br></br>\"\n   }\n  {$(\"#jobRunModal .modal-body\").html(props)}\n  $(\"#jobRunModal\").modal();\n }\n  }\n\n  retryJobRun(job_name,data)\n  {\n   var final_props = []\n   var data_jobruns = JSON.parse(data)\n   var default_props=[\"job_send_slack_notification\", \"job_enable_db_logging\", \"job_notification_level\"];\n\n   var i = 0\n   var final_props = []\n   var i;\n   for(var key in data_jobruns) {\n     if(!default_props.includes(key)){\n        final_props[i] =  {[\"$key$\"] : key,[\"$value$\"] : data_jobruns[key]}\n        i++\n     }\n   }\n   var props = ''\n\n\n   this.runEtlJob(job_name,final_props).then(({run_job}) => {\n    this.setNotification(true)\n    var data =  JSON.parse(JSON.stringify(run_job))\n    if(data !== null){\n        props = JSON.stringify(data[\"props\"]) \n        var job_name = JSON.stringify(data[\"name\"]) \n        this.setJobDeails(job_name,props)\n   }});     \n  }\n\n  setJobDeails(job_name,props){\n  this.setState(prevState => ({\n    retry_job_name: job_name,\n    run_job_props: props                    \n    }))\n  }\n\n  setNotification = state => {\n    this.setState(prevState => ({\n      notification: state\n    }))\n  }\n\n  setInitialState(){\n  this.props.match.params.job_name = undefined\n  this.setState(prevState => ({  \n    filter: '',\n    job_name: '',\n    filter_start_date: '',\n    filter_end_date: '',\n    paginationValue: 0,\n  }), () => this.setJobruns())\n  }\n\n  showJobRunStateModal(data)\n {\n  {$(\"#jobRunStateModal .modal-body\").html(data)}\n  $(\"#jobRunStateModal\").modal();\n  }\n\n  handleOnClick(job_id){    \n  this.props.history.push('/JobRunDetails/' + job_id)\n  }\n\n  render(){\n   var button = ''\n   var filter_button_name = '' \n   var filter_button_job_name = '' \n   var filter_start_date = ''  \n   var filter_end_date = ''  \n   var filter_back_button = ''\n\n   var message = ''\n   var job_props = ''\n   var errors = ''\n   if(this.state.notification){\n     job_props = this.state.run_job_props\n     if(this.state.is_error) {\n         message = 'Error while submitting job!'\n         JSON.parse(JSON.stringify(this.state.errors)).map( (data) => {\n           errors = data.message\n         })\n      } else {\n         message = ' Job ' +  this.state.retry_job_name.replace(/^\"(.*)\"$/, '$1') +  ' submitted successfully! '\n       }  \n   } \n\n\n   //Code for adding pagination element\n  if (this.state.paginationValue === 0) {\n    button = <li class=\"page-item disabled\">\n    <input type=\"button\" value=\"Previous\" class=\"page-link btn btn-secondary btn-sm\"/></li>\n  } else {\n    button =  <li class=\"page-item\">\n    <input type=\"button\" value=\"Previous\" class=\"page-link btn btn-secondary btn-sm\" onClick = {() => {\n             this.setState(prevState => ({\n              paginationValue: this.state.paginationValue  -   10\n            }))\n            this.fetchEtlFlowJobs(this.state.paginationValue - 10).then(({jobruns}) => {\n              this.setState(prevState => ({\n                jobruns: jobruns\n              }))\n            }) \n    }}/></li>\n  } \n\n   //Code for adding button name\n  if (this.state.filter !== '') {\n    filter_button_name = this.state.filter\n  }else {\n    filter_button_name = \"Add Filter\"\n  } \n\n   //Code for adding button name\n  if (this.state.job_name !== '') {\n     filter_button_job_name = this.state.job_name\n  }else {\n     filter_button_job_name = \"Type to search\"\n  } \n\n  if (this.state.filter_start_date !== '') {\n   filter_start_date = this.state.filter_start_date\n  }else {\n    filter_start_date = \"Start Date\"\n  } \n\n  if (this.state.filter_end_date !== '') {\n    filter_end_date = this.state.filter_end_date\n  }else {\n    filter_end_date = \"End Date\"\n  } \n\n  if(this.props.match.params.job_name !== undefined){\n    filter_back_button= <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                          this.props.history.push('/')\n                         }} >\n                        Back\n                        </button>\n  }\n\n  if (this.state.error !== ''){\n    return (\n      <div class=\"container\">\n       <ul class = \"pagination justify-content-center\">\n           <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                  this.setJobruns()\n              }}>\n             Refresh\n           </button>\n       </ul>\n          <ErrorComponent error={this.state.error_code}/>\n      </div>\n    );\n   } else  if (this.state.loader){\n    return (\n      <div>\n          <LoaderComponent />\n      </div>\n    );\n   }\n   else{\n   return (\n     <div className=\"container-fluid\">\n       <div><Notification notification={this.state.notification} is_error={this.state.is_error}  errors = {this.state.errors}  message={message} job_props = {job_props} setNotification={this.setNotification}/></div>\n       <ul class = \"pagination justify-content-center\">\n         <div class=\"dropdown\">\n            <button class=\"btn btn-light dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n               {filter_button_name}\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n              { this.filterOperation.map ( filter => (\n                   <a class=\"dropdown-item\">\n                      <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                           this.setState(prevState => ({\n                               filter: filter\n                       }))}}> {filter} </button>\n                   </a>\n              ))}\n            </div>\n         </div>\n         <div className =\"form-inline float-right\">\n             <div className=\"mb-1\">\n             <input type=\"text\"\n                        className=\"form-control input-sm\"\n                        list = \"datalistOptions\"\n                        id = \"exampleDataList\"\n                        placeholder = {filter_button_job_name}\n                        onChange={e => this.setJobName()}></input>      \n             </div>\n             <datalist id = \"datalistOptions\">\n               {this.props.jobs.map( data => (\n                 <option value = {data.name}></option>\n               ))}\n             </datalist> \n         </div>\n         <div class = \"form-inline float-right\">\n              <div class = \"mb-1\"> \n                  <input type=\"date\"\n                         className=\"form-control input-sm\"\n                         placeholder={filter_start_date}\n                         id = \"start_date\"\n                         onChange={e => this.setFilterStartDate()}\n                   ></input>\n              </div>\n              <div class = \"mb-1\"> \n                  <input type=\"date\"\n                         className=\"form-control input-sm\"\n                         placeholder={filter_end_date}\n                         id = \"end_date\"\n                         onChange={e => this.setFilterEndDate()}\n                   ></input> \n              </div>    \n         </div> \n         <button class= \"btn btn btn-sm\" type=\"button \" onClick= {() => {\n            this.setInitialState()\n            }}>\n            Clear\n         </button>\n         <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                this.setJobruns()\n             }} >\n            Refresh\n         </button>\n         {filter_back_button}\n       </ul>\n       <table id=\"jobruns\" class=\"table table-sm table-bordered\">\n           <thead class=\"thead-dark\">\n                 <tr>\n                   <th>Job Name</th>\n                   <th>Job Type</th>\n                   <th>Job Start Time</th>\n                   <th>Elapsed Time</th>\n                   <th>Job Status</th>\n                   <th>Actions</th>\n                 </tr>\n               </thead>\n                 <tbody>\n                 {this.state.jobruns.map( data => (\n                   <tr>\n                     <td> <button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\" onClick = {() => this.handleOnClick(data.job_run_id)}>{data.job_name}</button></td>\n                     <td>{data.job_type}</td>\n                     <td>{data.start_time}</td>\n                     <td>{data.elapsed_time}</td>\n                     <td>\n                     {(() => {\n                           if (data.state === \"pass\" || data.state == \"\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-success\">{data.state}</p>\n                               </div>\n                             )\n                           } else if (data.state === \"started\" || data.state == \"running\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-warning\">{data.state}</p>\n                               </div>\n                             )\n                           } else {\n                            return (\n                              <div>\n                                 <button type=\"button\" class=\"btn btn-danger btn btn-sm\" data-toggle=\"modal\" onClick = {() => this.showJobRunStateModal(data.state)}>\n                                     Error\n                                 </button>\n                            \n                                 <div class=\"modal fade\" id=\"jobRunStateModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                   <div class=\"modal-dialog\" role=\"document\">\n                                     <div class=\"modal-content\">\n                                       <div class=\"modal-header\">\n                                         <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                           <span aria-hidden=\"true\">&times;</span>\n                                         </button>\n                                       </div>\n                                       <div class=\"modal-body\">\n                                       </div>\n                                       <div class=\"modal-footer\">\n                                         <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                       </div>\n                                     </div>\n                                   </div>\n                                 </div>\n                              </div>\n                            )\n                           }\n                         })()}\n                     </td>\n                     <td>\n                     <div class='row'>\n                     <div class='col-xs-12 button-wrapper' class=\"inner\">\n                         <button type=\"button\" class=\"btn btn-secondary btn-sm ml-2\" data-toggle=\"modal\" onClick = {() => this.showModal(data.properties)}>\n                           Properties\n                         </button>\n                         \n                         <div class=\"modal fade\" id=\"jobRunModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                           <div class=\"modal-dialog\" role=\"document\">\n                             <div class=\"modal-content\">\n                               <div class=\"modal-header\">\n                                 <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                 <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                   <span aria-hidden=\"true\">&times;</span>\n                                 </button>\n                               </div>\n                               <div class=\"modal-body\">\n                               </div>\n                               <div class=\"modal-footer\">\n                                 <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                               </div>\n                             </div>\n                           </div>\n                         </div>\n\n                         {(() => {\n                           if (data.state === \"pass\" || data.state == \"\" || data.state == \"started\" ) {\n                             return (\n                               <div>\n                               </div>\n                             )\n                           } else {\n                             return (\n                               <div class=\"inner\">  \n                                  <button type=\"button\" class=\"btn btn-warning btn-sm ml-2\" data-toggle=\"modal\" onClick = {() => this.retryJobRun(data.job_name,data.properties)}>\n                                      Retry\n                                  </button>\n                               </div>\n                             )\n                           } \n                         })()}\n                        </div>\n                        </div> \n                     </td>\n                   </tr>\n                 ))}\n                 </tbody>\n            </table>  \n            <nav aria-label=\"Page navigation example\">\n               <ul class=\"pagination justify-content-center\">\n                 {button}\n                 <li class=\"page-item\"><input type=\"button\" value=\"Next\" class=\"page-link btn btn-secondary btn-sm\" onClick = {() => {\n                   this.setState(prevState => ({\n                     paginationValue: this.state.paginationValue  + 10\n                   }))\n                   this.fetchEtlFlowJobs(this.state.paginationValue + 10).then(({jobruns}) => {\n                    this.setState(prevState => ({  \n                      jobruns: jobruns\n                    }))\n                   })\n                   }}/></li>\n               </ul>\n         </nav>\n          </div>\n   );\n  }\n  }\n}\n\n// export default JobRuns; \nexport default withRouter(JobRuns)\n\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n  \nimport { withRouter } from 'react-router'\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\n\nclass JobLogsData extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { queueStats: [],\n      loader:false,\n      error:'',\n      error_code:'',\n\n    }\n  }\n\n  showModal(data)\n  {\n    var props = ''\n    var queue = JSON.parse(data)\n \n    for(var key in queue) {\n    { \n        props  += \"<b>\"+ key + \"</b>\" +\"=\" + queue[key]+ \"<br></br>\"\n    }\n\n   {$(\"#queueStats .modal-body\").html(props)}\n   $(\"#queueStats\").modal();\n  }\n  }\n\n  render(){\n    return(\n      <div class=\"container\">\n        <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.props.setEtlFlowQueueStats()\n                }}>\n               Refresh\n             </button>\n         </ul>\n          <table id=\"joblist\" class=\"table table-sm table-bordered\">\n            <thead class=\"thead-dark\">\n                  <tr>\n                    <th>Job Name</th>\n                    <th>Submitted From</th>\n                    <th>Execution Time</th>\n                    <th>Details</th>\n                  </tr>\n                </thead>\n                  <tbody>\n                  {this.props.queueStats.map( (data) => (\n                    <tr>\n                      <td>{data.name  }</td>\n                      <td>{data.submitted_from}</td>\n                      <td>{data.execution_time}</td>\n\n                      <td>\n                          <button type=\"button\" class=\"btn btn-secondary btn-sm\" data-toggle=\"modal\" onClick = {() => this.showModal(data.details)}>\n                            Stats\n                          </button>\n                          \n                          <div class=\"modal fade\" id=\"queueStats\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                              <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                  <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                  </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n            </table>\n      </div>     \n    );      \n  }\n}\nexport default JobLogsData;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\n  \n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport LoaderComponent from '../components/LoaderComponent';\nimport ErrorComponent from '../components/ErrorComponent';\nimport JobLogsData from '../pages/JobLogs';\n\nimport { fetch_api_call } from '../utils/GraphQl';\n\n\nclass JobLogs extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { queueStats: [],\n      loader:false,\n      error:'',\n      error_code:0,\n      errors: [],\n    }\n  }\n\n  async fetchEtlFlowQueueStats() {\n    const token = localStorage.getItem('Authorization')\n\n    this.setState(prevState => ({\n      loader: true,\n      error: ''\n    }))\n\n    var body = ` query { queueStats { name  details submitted_from execution_time  } }`\n    const response = await fetch_api_call(this.props.GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json()\n      return data;   \n    } \n  }\n\n  \n  setJobErrorDeails(is_error,errors){\n    this.setState(prevState => ({\n      is_error: is_error,\n      errors: errors                    \n      }))\n  }\n\n  componentDidMount() {\n    //calling getInfo api\n    this.setEtlFlowQueueStats()\n  }\n\n  setEtlFlowQueueStats = () => {\n    this.fetchEtlFlowQueueStats().then(({queueStats}) => {\n      this.setState(prevState  => ({\n        queueStats: queueStats,\n        loader: false\n      }))\n    }).catch((error) => {\n      this.setState(prevState => ({\n        error: error,\n        loader: false,\n      }))\n  }); \n  }\n\n  showModal(data)\n  {\n    var props = ''\n    var queue = JSON.parse(data)\n \n    for(var key in queue) {\n    { \n        props  += \"<b>\"+ key + \"</b>\" +\"=\" + queue[key]+ \"<br></br>\"\n    }\n\n   {$(\"#queueStats .modal-body\").html(props)}\n   $(\"#queueStats\").modal();\n  }\n  }\n\n  render(){\n    if (this.state.error !== ''){\n      return (\n        <div class=\"container\">\n         <ul class = \"pagination justify-content-center\">\n             <button class= \"btn btn btn-sm\" type=\"button \" onClick = {() => {\n                    this.setEtlFlowQueueStats()\n                }}>\n               Refresh\n             </button>\n         </ul>\n          <ErrorComponent error={this.state.error_code}/>\n        </div>\n      );\n    } \n    else if (this.state.loader){\n      return (\n        <div>\n          <LoaderComponent job_run_id={this.job_run_id}  set_job_run_state = {this.set_job_run_state} />\n        </div>\n      );\n    }\n    else{ \n      return (\n        <div>\n          <JobLogsData queueStats = {this.state.queueStats} setEtlFlowQueueStats = {this.setEtlFlowQueueStats} />\n       </div>\n    ); \n    }         \n  }\n}\nexport default JobLogs;\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'jquery/dist/jquery.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\n\nimport 'popper.js/dist/umd/popper.min.js';\nimport 'popper.js/dist/umd/popper.js';\nimport { withRouter } from 'react-router'\n\n//Datatable Modules\nimport \"datatables.net-dt/js/dataTables.dataTables\"\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\nimport $ from 'jquery';\nimport LoaderComponent from '../components/LoaderComponent';\nimport ErrorComponent from '../components/ErrorComponent';\nimport { fetch_api_call } from '../utils/GraphQl';\n\nclass JobRunDetails extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = { \n      stepruns: [],\n      loader:false,\n      error:'',\n      error_code:0\n    }\n    \n  }\n\n  async fetchEtlFlowJobById(job_run_id) {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n\n    this.setState(prevState => ({\n      loader: true\n    }))\n\n\n    var body =  ` query { stepruns(job_run_id: \\\"${job_run_id}\\\"){ job_run_id step_name properties state start_time elapsed_time step_type step_run_id  } }`\n    const response = await fetch_api_call(GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.logout() \n      localStorage.removeItem(\"Authorization\")\n    } \n\n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      const {data} = await response.json();\n      return data;\n    }    \n  }\n\n  setInterval() {\n    this.timerID = setInterval(\n      () => this.fetchEtlFlowJobs(),\n      1000 * 1000\n    );\n  }\n \n  componentDidMount() {\n    this.setEtlFlowJobById(this.props.match.params.id)\n    // set Interval\n    this.setInterval();\n  }\n\n  setEtlFlowJobById(id) {\n    this.fetchEtlFlowJobById(id).then(({stepruns}) => {\n      this.setState(prevState => ({\n        stepruns: stepruns,\n        loader : false\n      }))\n    })\n  }\n\n  componentWillUnmount() {\n  clearInterval(this.timerID);\n  }\n \n  showModal(data)\n {\n   var props = ''\n   var data_jobruns = JSON.parse(data)\n\n   for(var key in data_jobruns) {\n   { \n       props  += \"<b>\"+ key + \"</b>\" +\"=\" + data_jobruns[key]+ \"<br></br>\"\n   }\n  {$(\"#stepRunModal .modal-body\").html(props)}\n  $(\"#stepRunModal\").modal();\n }\n  }\n\n  showStepRunStateModal(data)\n {\n  {$(\"#stepRunStateModal .modal-body\").html(data)}\n  $(\"#stepRunStateModal\").modal();\n  }\n\n  handleOnClick(job_id){    \n  this.props.history.push('/StepRunsById/' + job_id)\n  }\n\n  render(){\n   var step_run_id_flag = false\n   this.state.stepruns.map( item => {if(item.step_run_id !== \"\") step_run_id_flag = true})\n   var linked_jobs = ''\n   if(step_run_id_flag) {\n    linked_jobs = <th>Linked Job</th>\n   } else {\n    linked_jobs = \"\"\n   }\n\n   var remoteStep = [\"EtlFlowJobStep\",\"DPSparkJobStep\",\"ParallelETLStep\"];\n   if (this.state.error !== ''){\n    return (\n      <div>\n        <ErrorComponent error={this.state.error_code}/>\n      </div>\n    );\n   } else if (this.state.loader){\n    return (\n      <div>\n        <LoaderComponent job_run_id={this.job_run_id}  set_job_run_state = {this.set_job_run_state} />\n      </div>\n    );\n   }\n   else{\n   return (\n     <div className=\"container-fluid\">\n         <table id=\"job runs\" class=\"table table-sm table-bordered\">\n           <thead class=\"thead-dark\">\n                 <tr>\n                   <th>Job Run Id</th>\n                   <th>Step Type</th>\n                   <th>Step Name</th>\n                   <th>Start Time</th>\n                   <th>Elapsed Time</th>\n                   <th>Status</th>\n                   <th>Properties</th> \n                   {linked_jobs}\n                   <th>\n                        <button className=\"btn btn-secondary btn-block\" onClick = {() => {\n                          this.props.history.push('/JobRuns')\n                         }} >Back</button>\n                   </th>\n                 </tr>\n               </thead>\n                 <tbody>\n                 {this.state.stepruns.map( data => (\n                   <tr>\n                     <td>{data.job_run_id}</td>\n                     <td>{data.step_type}</td>\n                     <td>{data.step_name}</td>\n                     <td>{data.start_time}</td>\n                     <td>{data.elapsed_time}</td>\n                     <td>\n                     {(() => {\n                           if (data.state === \"pass\" || data.state == \"\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-success\">{data.state}</p>\n                               </div>\n                             )\n                           } else if (data.state === \"started\" || data.state == \"running\" ) {\n                             return (\n                               <div>\n                                 <p className = \"text-warning\">{data.state}</p>\n                               </div>\n                             )\n                           } else {\n                            return (\n                              <div>\n                                 <button type=\"button\" class=\"btn btn-danger btn btn-sm\" data-toggle=\"modal\" onClick = {() => this.showStepRunStateModal(data.state)}>\n                                     Error\n                                 </button>\n                            \n                                 <div class=\"modal fade\" id=\"stepRunStateModal\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                   <div class=\"modal-dialog\" role=\"document\">\n                                     <div class=\"modal-content\">\n                                       <div class=\"modal-header\">\n                                         <h5 class=\"modal-title\" id=\"exampleModalLabel\">Properties </h5>\n                                         <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                           <span aria-hidden=\"true\">&times;</span>\n                                         </button>\n                                       </div>\n                                       <div class=\"modal-body\">\n                                       </div>\n                                       <div class=\"modal-footer\">\n                                         <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                       </div>\n                                     </div>\n                                   </div>\n                                 </div>\n                              </div>\n                            )\n                           }\n                         })()}\n                     </td>\n                     <td>\n                          <button type=\"button\" class=\"btn btn-secondary btn-sm\" data-toggle=\"modal\" onClick = {() => this.showModal(data.properties)}>\n                            Properties\n                          </button>\n                          \n                          <div class=\"modal fade\" id=\"stepRunModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                            <div class=\"modal-dialog\" role=\"document\">\n                              <div class=\"modal-content\">\n                                <div class=\"modal-header\">\n                                  <h5 class=\"modal-title\" id=\"exampleModalLabel\">Step Properties</h5>\n                                  <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                  </button>\n                                </div>\n                                <div class=\"modal-body\">\n                                </div>\n                                <div class=\"modal-footer\">\n                                  <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                      </td>\n                     <td>\n                         {(() => {\n                            if (remoteStep.includes(data.step_type)) {\n                              return (\n                                <input type=\"button\" value=\"Check Progress\" class=\"btn btn-secondary btn-sm\" onClick = {() => this.setEtlFlowJobById(data.step_run_id)}/>\n                              )\n                            } else {\n                              return (\n                                <div></div>\n                              )\n                            }\n                          })()}\n                    </td>\n                   </tr>\n                 ))}\n                 </tbody>\n            </table>\n          </div>\n    );\n    }\n  }\n}\nexport default withRouter(JobRunDetails)\n","import React from 'react';\n\nimport jwt_decode from \"jwt-decode\";\nimport CurrentTime from './CurrentTime';\nimport Stats from '../cards/Stats';\nimport Credentials from '../cards/Credential';\nimport JobList from '../cards/JobList';\nimport JobRuns from '../cards/JobRuns';\nimport JobLogs from '../cards/JobLogs';\nimport { fetch_api_call } from '../utils/GraphQl';\n\nimport '../css/App.css'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport JobRunDetails from '../pages/JobRunDetails';\n\n\nclass Routes extends React.Component {\n\n  constructor(props){\n    super(props); \n    this.state  = {\n      jobs: [],\n      metrics: [],\n      user: '',\n      loader:false,\n      error:'',\n      error_code:0,\n    }\n  }\n\n  async fetchEtlFlowJobs() {\n    const GRAPHQL_URL = this.props.GRAPHQL_URL\n    this.setState(prevState => ({\n      loader: true,\n      error:''\n    }))\n    var body =  ` query { jobs { name  schedule props {key value} nextSchedule schduleRemainingTime is_active  last_run_time last_run_description } } `\n    const response = await fetch_api_call(GRAPHQL_URL,body)\n\n    if (response.status === 403) {\n      this.props.doLogout() \n      localStorage.removeItem(\"Authorization\")\n    } \n    \n    if (!response.ok) {\n      var message = `An error has occured: ${response.statusText}`;\n      this.setState(prevState => ({\n        error_code: response.status\n      }))\n      throw  new Error(message);\n    } \n    else {  \n      this.setState(prevState => ({\n        loader: false\n      }))  \n      const {data} = await response.json();\n\n      return data;    \n    }\n  }\n\n  setInterval() {\n    this.timerID = setInterval(\n      () => this.get_etl_jobs(),\n      1000 * 1000\n    );\n  }\n\n  fetchEtlFlowUserDetails() {\n    const token = localStorage.getItem('Authorization')\n    var decoded = JSON.parse(JSON.stringify(jwt_decode(token)));\n    this.setState({\n      user: decoded[\"user\"]\n    })\n  }\n\n  componentDidMount() {\n\n    //calling jobs api\n    this.get_etl_jobs()\n    this.fetchEtlFlowUserDetails()\n }\n\n  get_etl_jobs = () => {\n   this.fetchEtlFlowJobs().then(({jobs}) => {\n     this.setState(prevState => ({\n       jobs: jobs,\n       loader: false\n     }))\n   }).catch(error => {\n     this.setState(prevState => ({\n       error: error,\n       loader: false\n     }))\n    });\n  }\n\n  remove_token() {\n   localStorage.removeItem(\"Authorization\")\n   this.props.doLogout(\"\")\n}\n\n  render(){\n    return (\n       <Router>\n          <nav className = \"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n              <ul className = \"nav navbar-nav w-100\">\n                <li className = \"nav-item nav-link\" ><Link to=\"/\">Jobs</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/JobRuns\">Job Runs</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/JobLogs\">Job Logs</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/Stats\">Stats</Link> </li>\n                <li className = \"nav-item nav-link\" ><Link to=\"/Credentials\">Credentials</Link> </li>\n              </ul>\n              <div class=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\n              <ul class=\"nav justify-content-end w-100\">\n              <CurrentTime GRAPHQL_URL = {this.props.GRAPHQL_URL}/>\n                <li class=\"nav-item dropdown\">\n\t                <a class=\"nav-link  dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\">{this.state.user}</a>\n\t                  <ul class=\"dropdown-menu\">\n\t\t                  <li>\n                        <a class=\"dropdown-item\" href=\"https://github.com/tharwaninitin/etlflow\">\n                           Git Hub \n                        </a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"https://tharwaninitin.github.io/etlflow/site/\">\n                          Docs\n                        </a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\">\n                          <input type=\"button\" class=\"btn btn-secondary btn-sm\" value=\"LogOut\" onClick = {() => this.remove_token()}></input>\n                        </a>\n                      </li>\n\t                  </ul>\n\t              </li>\n              </ul>\n            </div>\n          </nav>\n          <Switch>\n              <Route exact path=\"/\" component={() => (<JobList GRAPHQL_URL = {this.props.GRAPHQL_URL} jobs={this.state.jobs} logout={this.props.doLogout} get_etl_jobs = {this.get_etl_jobs} error = {this.state.error}  error_code = {this.state.error_code} loader = {this.state.loader}/>)}/>\n              <Route path=\"/JobRuns/:job_name?\" render={props => (<JobRuns GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout} jobs={this.state.jobs}/>)}/>\n              <Route path=\"/JobLogs\" render={props => (<JobLogs GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout}/>)}/>\n              <Route path=\"/Stats\" render={props => (<Stats GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout}/>)}/>\n              <Route path=\"/Credentials\" render={props => ( <Credentials GRAPHQL_URL = {this.props.GRAPHQL_URL} logout={this.props.doLogout} />)}/>\n              <Route path=\"/JobRunDetails/:id\" render={props => ( <JobRunDetails GRAPHQL_URL = {this.props.GRAPHQL_URL}/>)}/>\n          </Switch>\n       </Router>\n    );\n    }\n}\nexport default Routes;\n// export default withRouter(Routes)\n\n","import React from 'react';\n//Bootstrap and jQuery libraries\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min.js';\nimport jwt_decode from \"jwt-decode\";\n\nimport { fetch_api_call } from '../utils/GraphQl';\n\nclass Login extends React.Component {\n  constructor(props){\n    super(props); \n    this.state  = {\n         user_name: '',\n         password: '',\n         token: '', \n         login: [],\n\n        }\n\n    this.login_validation = this.login_validation.bind(this);\n    this.set_login_user_name = this.set_login_user_name.bind(this);\n    this.set_login_password = this.set_login_password.bind(this);\n  }\n\n  async fetchLoginDetails(user_name,password) {\n    const GRAPHQL_URL = this.props.GRAPHQL_LOGIN_URL\n\n    var query =   ` mutation { login (user_name: \\\"${user_name}\\\", password: \\\"${password}\\\") { message token } }`\n    const response = await fetch_api_call(GRAPHQL_URL,query)\n    const {data} = await response.json();\n    return data;        \n  }\n\n login_validation() {\n    this.fetchLoginDetails(this.state.user_name,this.state.password).then(({login}) => {\n        var token_value = JSON.parse(JSON.stringify(login)).token\n        if(token_value !== \"\")\n        {\n            localStorage.setItem('Authorization', token_value);   \n            this.props.doLogin(token_value)\n            this.setState(prevState => ({\n                token: token_value\n              }))\n        }\n        else \n        {\n            alert(\"Invalid User\")\n        }\n    })   \n  } \n\n  set_login_user_name() {\n    this.setState(prevState => ({\n        user_name: document.getElementById(\"user_name\").value\n      }))\n  }\n\n  set_login_password() {\n    this.setState(prevState => ({\n        password: document.getElementById(\"password\").value\n      }))\n  }\n\n  render(){\n    return (\n    <div className=\"main\" align=\"center\">\n         <nav className = \"navbar navbar-expand-lg navbar-dark bg-dark mb-3\">\n             <ul className = \"nav navbar-nav w-50\">\n                 <li className = \"nav-item nav-link\">EtlFlow</li>\n             </ul>\n         </nav>   \n           <div className=\"col-md-3\">\n            <div className=\"login-form \">\n                <form id=\"form_login\" className = \"text-center border border-dark p-5\" onSubmit={(e) => {this.login_validation(); e.preventDefault();}  }>\n                    <p className = \"h4 mb-4\">EtlFlow Login</p>\n                    <div className=\"form-group\">\n                        <input type=\"text\"\n                         className=\"form-control\" \n                         aria-describedby=\"UsernameHelp\"\n                         placeholder=\"Username\"\n                         id=\"user_name\"\n                         onChange={e => this.set_login_user_name()}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                         type=\"password\"\n                         className=\"form-control\"\n                         aria-describedby=\"PasswordHelp\"\n                         placeholder=\"Password\"\n                         id=\"password\"\n                         onChange={e => this.set_login_password()}></input>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-secondary btn-block\">Submit</button>\n                </form>   \n            </div>\n        </div>\n    </div>\n    );\n  }\n}\nexport default Login;","import React from 'react';\n//Bootstrap and jQuery libraries\nimport Routes from './components/Routes';\nimport LoginComponent from './components/Login';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      token: '',\n    }\n\n  //  this.GRAPHQL_URL = 'https://devetlflow.startv.com/api/etlflow'\n  //  this.GRAPHQL_LOGIN_URL = 'https://devetlflow.startv.com/api/login'\n\n   this.GRAPHQL_URL = '/api/etlflow'\n   this.GRAPHQL_LOGIN_URL = 'api/login' \n   \n   this.doLogin = this.doLogin.bind(this)\n   this.doLogout = this.doLogout.bind(this)\n\n  }\n\n  doLogin(args_token,args_user) {\n    this.setState({\n      token: args_token\n    })\n  }\n\n\n  doLogout(args_token) {\n    this.setState({\n      token: ''\n    })\n  }\n\n\n  render(){\n    if(localStorage.getItem(\"Authorization\") === null){\n      return (  \n          <div>\n            <LoginComponent  GRAPHQL_LOGIN_URL = {this.GRAPHQL_LOGIN_URL} doLogin = {this.doLogin}/>  \n          </div>\n      );\n    } else {\n      return (  \n        <div>\n          <Routes  GRAPHQL_URL = {this.GRAPHQL_URL} doLogout = {this.doLogout}/>  \n        </div>\n     );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","var fetch_api_call = function(url,query) {\n    const token = localStorage.getItem('Authorization')\n\n    var response = fetch(url, {\n        method: 'POST',\n        headers: {\n          'content_type': 'applcation/json',\n          'Authorization': token,\n        },\n        body:  JSON.stringify(\n          {\n            query: query\n          }\n        )  \n      })\n\n    return response\n}\n   \nexports.fetch_api_call = fetch_api_call;"],"sourceRoot":""}